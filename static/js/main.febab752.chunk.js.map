{"version":3,"sources":["components/log/Log.module.scss","components/user-quick-info/UserQuickInfo.module.scss","components/project/Project.module.scss","components/header/Header.module.scss","components/profile-configuration/ProfileConfiguration.module.scss","components/organizations/Organizations.module.scss","components/modal/Modal.module.scss","components/timeline/Timeline.module.scss","components/page-container/PageContainer.module.scss","components/kanban-board/KanbanBoard.module.scss","components/loader-generic/LoaderGeneric.module.scss","components/sidebar/SidebarComponent.module.scss","components/funds/Funds.module.scss","components/task/Task.module.scss","config/index.js","substrate-lib/SubstrateContext.js","substrate-lib/utils.js","substrate-lib/components/TxButton.js","substrate-lib/components/DeveloperConsole.js","pages/template-resources/components/AccountSelector.js","pages/template-resources/components/Balances.js","pages/template-resources/components/BlockNumber.js","pages/template-resources/components/Events.js","pages/template-resources/components/Interactor.js","pages/template-resources/components/Metadata.js","pages/template-resources/components/NodeInfo.js","pages/template-resources/components/TemplateModule.js","pages/template-resources/components/Transfer.js","pages/template-resources/components/Upgrade.js","pages/template-resources/TemplateResources.jsx","store/slices/accountSlice.js","hooks/useUser.js","store/slices/statusSlice.js","hooks/useStatus.js","store/slices/loadersSlice.js","hooks/useLoader.js","types/index.js","hooks/useToast.js","store/slices/daoSlice.js","hooks/useGeneral.js","store/slices/profileSlice.js","hooks/useProfile.js","hooks/useUtils.js","store/slices/tasksSlice.js","hooks/useTasks.js","components/header/Header.jsx","components/sidebar/SidebarComponent.jsx","components/layout/Layout.jsx","components/user-quick-info/UserQuickInfo.jsx","components/funds/Funds.jsx","components/profile-configuration/ProfileConfiguration.jsx","components/timeline/Timeline.jsx","components/task/Task.jsx","components/project/Project.jsx","components/events/Events.jsx","components/page-container/PageContainer.jsx","components/kanban-board/KanbanBoard.jsx","components/loader-full-page/LoaderFullPage.jsx","components/loader-generic/LoaderGeneric.jsx","components/organizations/Organizations.jsx","hooks/useDao.js","components/modal/Modal.jsx","pages/calendar/Calendar.jsx","pages/dashboard/Dashboard.jsx","pages/organization-joined/OrganizationJoined.jsx","pages/organization-kanban/OrganizationKanban.jsx","pages/organization-own/OrganizationOwn.jsx","pages/profile/Profile.jsx","pages/sign-in/SignIn.jsx","pages/sign-up/SignUp.jsx","App.js","store/slices/generalSlice.js","store/saga/index.js","store/store.js","index.js"],"names":["module","exports","configEnv","require","envVars","reduce","mem","n","undefined","process","slice","config","configCommon","connectedSocket","queryString","parse","window","location","search","rpc","PROVIDER_SOCKET","console","log","INIT_STATE","socket","jsonrpc","RPC","keyring","keyringState","api","apiError","apiState","reducer","state","action","type","payload","Error","loadAccts","SubstrateContext","React","createContext","SubstrateContextProvider","props","initState","forEach","key","useReducer","dispatch","provider","WsProvider","_api","ApiPromise","on","isReady","then","err","connect","asyncLoadAccounts","a","web3Enable","APP_NAME","web3Accounts","allAccounts","map","address","meta","name","source","loadAll","isDevelopment","DEVELOPMENT_KEYRING","error","loadAccounts","Provider","value","children","useSubstrate","useContext","utils","paramConversion","num","TxButton","accountPair","label","setStatus","color","style","attrs","disabled","useState","unsub","setUnsub","sudoKey","setSudoKey","palletRpc","callable","inputParams","paramFields","isSudo","isUncheckedSudo","useEffect","query","sudo","isEmpty","toString","acctPair","getFromAcct","isInjected","web3FromSource","injected","fromAcct","setSigner","signer","txResHandler","status","isFinalized","asFinalized","txErrHandler","sudoTx","transformed","transformParams","txExecute","tx","signAndSend","catch","uncheckedSudoTx","sudoUncheckedWeight","signedTx","unsignedTx","send","queryResHandler","result","isNone","emptyAsNull","constant","consts","transaction","opts","paramVal","inputParam","trim","params","field","ind","memo","converted","indexOf","split","e","single","isNumType","Number","parseFloat","parseInt","some","el","Button","basic","onClick","length","every","paramField","param","optional","TxGroupButton","Group","Or","DeveloperConsole","util","utilCrypto","Main","setAccountAddress","accountSelected","setAccountSelected","keyringOptions","getPairs","account","text","toUpperCase","icon","initialAddress","Menu","attached","tabular","backgroundColor","borderColor","paddingTop","paddingBottom","Container","Image","src","size","position","alignItems","target","rel","href","circular","Dropdown","selection","clearable","placeholder","options","onChange","_","dropdown","BalanceAnnotation","accountBalance","setAccountBalance","unsubscribe","system","balance","data","free","toHuman","Label","pointing","Icon","AccountSelector","accounts","balances","setBalances","addresses","unsubscribeAll","multi","balancesMap","acc","index","Grid","Column","Table","celled","striped","Body","Row","Cell","width","textAlign","display","minWidth","compact","finalized","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","number","toNumber","timer","time","id","setInterval","clearInterval","Card","Content","Statistic","extra","BlockNumber","FILTERED_EVENTS","eventParams","ev","JSON","stringify","eventFeed","setEventFeed","keyNum","allEvents","events","record","event","phase","evHuman","evName","section","method","evParams","evNamePhase","includes","summary","content","feedMaxHeight","float","floated","Feed","clear","overflow","maxHeight","Events","argIsOptional","arg","startsWith","interxType","setInterxType","palletRPCs","setPalletRPCs","callables","setCallables","setParamFields","initFormState","formState","setFormState","getApiType","apiType","Object","keys","sort","filter","pr","c","metaType","isPlain","isMap","asMap","isDoubleMap","asDoubleMap","key1","key2","metaArgs","args","metaParam","isOptional","onPalletCallableParamChange","res","onInterxTypeChange","getOptionalMsg","Form","overflowX","inline","Radio","checked","Field","fluid","Input","InteractorSubmit","overflowWrap","Interactor","version","metadata","setMetadata","getMetadata","Header","Meta","trigger","scrolling","Description","Metadata","nodeInfo","setNodeInfo","getInfo","Promise","all","nodeName","nodeVersion","NodeInfo","currentValue","setCurrentValue","formValue","setFormValue","templateModule","something","newValue","unwrap","centered","TemplateModule","addressTo","amount","prev","marginLeft","marginTop","proposal","setProposal","handleFileChosen","file","fileReader","FileReader","onloadend","buffer","Array","from","Uint8Array","b","padStart","join","readAsArrayBuffer","accept","files","TemplateResources","accountAddress","getPair","loader","Dimmer","active","Loader","columns","padded","Message","negative","floating","header","contextRef","createRef","ref","Sticky","context","stackable","stretched","displayName","accountSlice","createSlice","initialState","selectedAccountBalance","selectedKeyring","reducers","setSelectedKeyringAction","setBalance","setKeyringOptionsAction","actions","changeUsername","useUser","useDispatch","useSelector","setKeyringOptions","keyringOptionsArray","setSelectedKeyring","statusSlice","message","setStatusMessage","useStatus","useCallback","setStatusAction","statusMessage","setTheStatusMessage","loadersSlice","profile","tasks","setLoading","useLoader","loadingProfile","loaders","loadingTasks","loadingBoolean","setLoadingAction","statusTypes","loadingTypes","toastTypes","pallets","profileCallables","taskCallables","daoCallables","useToast","hideProgressBar","toast","toastify","info","success","warn","daoSlice","totalOrganizations","totalVisions","joinedOrganizations","suggestedVisions","visionNameForAction","organizationNameForAction","memberOrTaskForAction","applicantsToOrganization","setTotalOrganizations","setTotalVisions","setJoinedOrganizations","setSuggestedVisions","setVisionName","setOrganizationName","setMemberOrTask","setApplicants","resetState","useGeneral","sidebarWidth","general","profileSlice","form","interests","username","setProfile","setFormInterests","setUsername","useProfile","actionLoading","setActionLoading","profileData","reputationPoints","reputation","populateFormInterests","interestsArray","setUsernameAction","queryResponseHandler","setAllData","getProfile","cb","signedTransaction","actionType","transactionResponseHandler","callStatus","setTimeout","isInBlock","transactionErrorHandler","inputParamsForTransformed","profileAction","task","title","specification","budget","deadline","isEditMode","tasksSlice","setTasks","resetTasks","setTaskTitle","setTaskSpecification","setTaskBudget","setTaskDeadline","setTaskIsEditMode","resetTask","useTasks","taskValues","resetAllTasks","populateTask","getTask","taskId","responseHandler","getAllTasks","taskPayload","transformedPayloadForCreate","transformedPayloadForStartCompleteRemove","taskAction","useLocation","AccountDropdown","avatar","spaced","top","Item","Divider","as","Link","to","className","styles","contentContainer","logoContainer","mainContent","paddingRight","menu","menuItem_activePage","current","pathname","capitalized","charAt","fontWeight","activePage","Search","otherData","find","option","SidebarComponent","expOrg","setExpOrg","navigate","useNavigate","Sidebar","Pushable","sidebarComponent","height","animation","vertical","visible","sidebar","menuItem_first","menuItem_content","menuItem_content_text","paddingLeft","menuItem_nested_content","Pusher","overflowY","transform","sidebarContent","Layout","UserQuickInfo","raised","card","user","image","divider","role","Funds","grid","row","column","mobile","tablet","computer","button","description","ProfileConfiguration","oneInterest","setOneInterest","showLoader","setShowLoader","usernameEditEnabled","setUsernameEditEnabled","loading","Placeholder","Line","body","gridContainer","readOnly","onKeyDown","keyCode","pills","selected","interest","i","margin","interestItem","handleRemoveInterest","Paragraph","Timeline","allTasksReceived","useMemo","handleOptionsOnClick","noTasks","optionsOnClick","projects","testNo","date","Task","setData","dataFromResponse","OptionsDropdown","direction","parentProject","taskDescription","wordBreak","initiator","footer","labelPosition","Project","project","iconComponent","flexGrow","PageContainer","pageContainer","KanbanBoard","open","setOpen","handleClose","handleOnChange","background","padding","components","LaneHeader","justifyContent","primary","lanes","cards","draggable","sha","onClose","actionButtonLabel","actionButtonColor","actionButtonOnClick","removeButtonLabel","removeButtonOnClick","showRemoveButton","LoaderFullPage","LoaderGeneric","loaderContainer","Organizations","setActionType","modalTitle","setModalTitle","daoType","setDaoType","dao","allApplicants","visionName","setVisionNameForAnAction","orgName","setOrganizationNameForAnAction","memberOrTaskId","setMemberOrTaskForAnAction","handleQueryResponse","daoQueryType","setApplicantsToOrg","getApplicants","organizationName","resData","getJoinedOrganizations","userKey","getTotalOrganizations","getTotalVisions","getSuggestedVisions","transformedPayloadAddMembers","transformedPayloadAddTasks","transformedPayloadCreateOrg","transformedPayloadCreateVision","transformedPayloadDissolveOrg","transformedPayloadRemoveMembers","transformedPayloadRemoveTasks","transformedPayloadRemoveVision","transformedPayloadSignVision","transformedPayloadUnsignVision","daoAction","resetFields","useDao","searchOrg","setSearchOrg","visionNameTypes","orgNameTypes","memberAndTaskTypes","taskTypes","handleTopInputOnChange","inputType","handleBottomInputOnChange","buttonClick","gridStats","org","suggVis","substring","visionButtons","visionButton","val","appl","Modal","Portal","Segment","left","zIndex","boxShadow","cardHeader","localizer","momentLocalizer","moment","DragAndDropCalendar","withDragAndDrop","ReactBigCalendar","Calendar","initialEvent","start","Date","toDate","end","add","setEvents","displayDragItemInCell","draggedEvent","setDraggedEvent","moveEvent","droppedOnAllDaySlot","isAllDay","allDay","nextEvents","existingEvent","selectable","onEventDrop","onEventResize","startAccessor","endAccessor","popup","dragFromOutsideItem","onDropFromOutside","handleDragStart","Dashboard","OrganizationJoined","OrganizationKanban","OrganizationOwn","Profile","SignIn","SignUp","App","path","element","replace","newestOnTop","generalSlice","sagaMiddleware","createSagaMiddleware","store","configureStore","generalReducer","accountReducer","profileReducer","statusReducer","tasksReducer","daoReducer","loadersReducer","middleware","getDefaultMiddleware","thunk","concat","run","rootSaga","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.febab752.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"log\":\"Log_log__2bwgJ\",\"isFirst\":\"Log_isFirst__Phs46\",\"isLast\":\"Log_isLast__3HrXr\",\"content\":\"Log_content__2PAcY\",\"left\":\"Log_left__3aBFz\",\"owner\":\"Log_owner__bRNwC\",\"icon\":\"Log_icon__1Zp_4\",\"title\":\"Log_title__2hNEA\",\"info\":\"Log_info___0ihE\",\"type\":\"Log_type__OO9YU\",\"time\":\"Log_time__xULaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"UserQuickInfo_card__t8L7S\",\"contentContainer\":\"UserQuickInfo_contentContainer__ZDjRR\",\"user\":\"UserQuickInfo_user__1U-sY\",\"image\":\"UserQuickInfo_image__3jIRk\",\"name\":\"UserQuickInfo_name__1S3sM\",\"divider\":\"UserQuickInfo_divider__1Ppc6\",\"role\":\"UserQuickInfo_role__1lU47\",\"log\":\"UserQuickInfo_log__1-_ro\",\"icon\":\"UserQuickInfo_icon__3Icdn\",\"info\":\"UserQuickInfo_info__3TMHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"Project_project__2atlu\",\"content\":\"Project_content__iI8pH\",\"icon\":\"Project_icon__1utV0\",\"iconComponent\":\"Project_iconComponent__3qcWP\",\"info\":\"Project_info__13R3M\",\"title\":\"Project_title__Z3xzL\",\"description\":\"Project_description__6F3KM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1fCsm\",\"contentContainer\":\"Header_contentContainer__1z_-Q\",\"logoContainer\":\"Header_logoContainer__thx6v\",\"mainContent\":\"Header_mainContent__1DdYd\",\"menu\":\"Header_menu__1bgN5\",\"menuItem_activePage\":\"Header_menuItem_activePage__37R7s\",\"menuItem_username\":\"Header_menuItem_username__3xKPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumb\":\"ProfileConfiguration_breadcrumb__1KdWY\",\"gridContainer\":\"ProfileConfiguration_gridContainer__5Ra7S\",\"card\":\"ProfileConfiguration_card__OhSrU\",\"body\":\"ProfileConfiguration_body__10QNV\",\"search\":\"ProfileConfiguration_search__2G0sq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridStats\":\"Organizations_gridStats__1oAuq\",\"row\":\"Organizations_row__3xXBQ\",\"column\":\"Organizations_column__WxD7R\",\"card\":\"Organizations_card__9o5R0\",\"contentContainer\":\"Organizations_contentContainer__2J5of\",\"header\":\"Organizations_header__2Dhg-\",\"text\":\"Organizations_text__vv55I\",\"description\":\"Organizations_description__2RBC7\",\"grid\":\"Organizations_grid__32fRb\",\"section\":\"Organizations_section__173M8\",\"icon\":\"Organizations_icon__1mg6e\",\"body\":\"Organizations_body__2mSE1\",\"date\":\"Organizations_date__3W5O4\",\"visionButtons\":\"Organizations_visionButtons__1M7hd\",\"visionButton\":\"Organizations_visionButton__1e-W8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"Modal_gridContainer__2tfWL\",\"card\":\"Modal_card__1xD_N\",\"cardHeader\":\"Modal_cardHeader__2JJV_\",\"body\":\"Modal_body__2rGrQ\",\"search\":\"Modal_search__3V1BV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Timeline_grid__MmndA\",\"row\":\"Timeline_row__3Aj7S\",\"column\":\"Timeline_column__33dxb\",\"section\":\"Timeline_section__3UH7I\",\"contentContainer\":\"Timeline_contentContainer__wC3pW\",\"header\":\"Timeline_header__1Yr5t\",\"text\":\"Timeline_text__2LpWM\",\"icon\":\"Timeline_icon__2hzsn\",\"body\":\"Timeline_body__1IqX_\",\"date\":\"Timeline_date__3e5Fm\",\"noTasks\":\"Timeline_noTasks__P4zzV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pageContainer\":\"PageContainer_pageContainer__3_CGQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"KanbanBoard_gridContainer__2sxDb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"LoaderGeneric_loaderContainer__1NVyM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarComponent\":\"SidebarComponent_sidebarComponent__2URF8\",\"sidebar\":\"SidebarComponent_sidebar__tt_QJ\",\"menuItem_first\":\"SidebarComponent_menuItem_first__78Hw4\",\"menuItem_content\":\"SidebarComponent_menuItem_content__1PCz2\",\"menuItem_content_text\":\"SidebarComponent_menuItem_content_text__zovxI\",\"menuItem_nested_content\":\"SidebarComponent_menuItem_nested_content__3VRjw\",\"sidebarContent\":\"SidebarComponent_sidebarContent__3Szbj\",\"contentContainer\":\"SidebarComponent_contentContainer__1tfVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Funds_grid__2N37o\",\"row\":\"Funds_row__ziauV\",\"column\":\"Funds_column__1mUub\",\"card\":\"Funds_card__3vT3s\",\"contentContainer\":\"Funds_contentContainer__3ZlOm\",\"header\":\"Funds_header__Vr-57\",\"text\":\"Funds_text__1gVuC\",\"description\":\"Funds_description__1dVEt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__L6vuI\",\"content\":\"Task_content__2FKt_\",\"status\":\"Task_status__1xfA1\",\"descriptor\":\"Task_descriptor__3ddk2\",\"parentProject\":\"Task_parentProject__y4Gma\",\"icon\":\"Task_icon__3JrMJ\",\"title\":\"Task_title__1hL12\",\"taskDescription\":\"Task_taskDescription__27t4O\",\"footer\":\"Task_footer__1XP0u\",\"button\":\"Task_button__1q1-k\"};","import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n","import React, { useReducer, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport jsonrpc from '@polkadot/types/interfaces/jsonrpc';\nimport queryString from 'query-string';\n\nimport { ApiPromise, WsProvider } from '@polkadot/api';\nimport { web3Accounts, web3Enable } from '@polkadot/extension-dapp';\nimport keyring from '@polkadot/ui-keyring';\n\nimport config from '../config';\n\nconst parsedQuery = queryString.parse(window.location.search);\nconst connectedSocket = parsedQuery.rpc || config.PROVIDER_SOCKET;\nconsole.log(`Connected socket: ${connectedSocket}`);\n\n///\n// Initial state for `useReducer`\n\nconst INIT_STATE = {\n  socket: connectedSocket,\n  jsonrpc: { ...jsonrpc, ...config.RPC },\n  keyring: null,\n  keyringState: null,\n  api: null,\n  apiError: null,\n  apiState: null,\n};\n\n///\n// Reducer function for `useReducer`\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'CONNECT_INIT':\n      return { ...state, apiState: 'CONNECT_INIT' };\n\n    case 'CONNECT':\n      return { ...state, api: action.payload, apiState: 'CONNECTING' };\n\n    case 'CONNECT_SUCCESS':\n      return { ...state, apiState: 'READY' };\n\n    case 'CONNECT_ERROR':\n      return { ...state, apiState: 'ERROR', apiError: action.payload };\n\n    case 'LOAD_KEYRING':\n      return { ...state, keyringState: 'LOADING' };\n\n    case 'SET_KEYRING':\n      return { ...state, keyring: action.payload, keyringState: 'READY' };\n\n    case 'KEYRING_ERROR':\n      return { ...state, keyring: null, keyringState: 'ERROR' };\n\n    default:\n      throw new Error(`Unknown type: ${action.type}`);\n  }\n};\n\n///\n// Connecting to the Substrate node\n\nconst connect = (state, dispatch) => {\n  const { apiState, socket, jsonrpc } = state;\n  // We only want this function to be performed once\n  if (apiState) return;\n\n  dispatch({ type: 'CONNECT_INIT' });\n\n  const provider = new WsProvider(socket);\n  const _api = new ApiPromise({ provider, rpc: jsonrpc });\n\n  // Set listeners for disconnection and reconnection event.\n  _api.on('connected', () => {\n    dispatch({ type: 'CONNECT', payload: _api });\n    // `ready` event is not emitted upon reconnection and is checked explicitly here.\n    _api.isReady.then(_api => dispatch({ type: 'CONNECT_SUCCESS' }));\n  });\n  _api.on('ready', () => dispatch({ type: 'CONNECT_SUCCESS' }));\n  _api.on('error', err => dispatch({ type: 'CONNECT_ERROR', payload: err }));\n};\n\n///\n// Loading accounts from dev and polkadot-js extension\n\nlet loadAccts = false;\nconst loadAccounts = (state, dispatch) => {\n  const asyncLoadAccounts = async () => {\n    dispatch({ type: 'LOAD_KEYRING' });\n    try {\n      await web3Enable(config.APP_NAME);\n      let allAccounts = await web3Accounts();\n      allAccounts = allAccounts.map(({ address, meta }) => ({\n        address,\n        meta: { ...meta, name: `${meta.name} (${meta.source})` },\n      }));\n      keyring.loadAll(\n        { isDevelopment: config.DEVELOPMENT_KEYRING },\n        allAccounts\n      );\n      dispatch({ type: 'SET_KEYRING', payload: keyring });\n    } catch (e) {\n      console.error(e);\n      dispatch({ type: 'KEYRING_ERROR' });\n    }\n  };\n\n  const { keyringState } = state;\n  // If `keyringState` is not null `asyncLoadAccounts` is running.\n  if (keyringState) return;\n  // If `loadAccts` is true, the `asyncLoadAccounts` has been run once.\n  if (loadAccts) return dispatch({ type: 'SET_KEYRING', payload: keyring });\n\n  // This is the heavy duty work\n  loadAccts = true;\n  asyncLoadAccounts();\n};\n\nconst SubstrateContext = React.createContext();\n\nconst SubstrateContextProvider = props => {\n  // filtering props and merge with default param value\n  const initState = { ...INIT_STATE };\n  const neededPropNames = ['socket'];\n  neededPropNames.forEach(key => {\n    initState[key] =\n      typeof props[key] === 'undefined' ? initState[key] : props[key];\n  });\n\n  const [state, dispatch] = useReducer(reducer, initState);\n  connect(state, dispatch);\n  loadAccounts(state, dispatch);\n\n  return (\n    <SubstrateContext.Provider value={state}>\n      {props.children}\n    </SubstrateContext.Provider>\n  );\n};\n\n// prop typechecking\nSubstrateContextProvider.propTypes = {\n  socket: PropTypes.string,\n};\n\nconst useSubstrate = () => ({ ...useContext(SubstrateContext) });\n\nexport { SubstrateContextProvider, useSubstrate };\n","const utils = {\n  paramConversion: {\n    num: [\n      'Compact<Balance>',\n      'BalanceOf',\n      'u8',\n      'u16',\n      'u32',\n      'u64',\n      'u128',\n      'i8',\n      'i16',\n      'i32',\n      'i64',\n      'i128',\n    ],\n  },\n};\n\nexport default utils;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'semantic-ui-react';\nimport { web3FromSource } from '@polkadot/extension-dapp';\n\nimport { useSubstrate } from '../';\nimport utils from '../utils';\n\nfunction TxButton({\n  accountPair = null,\n  label,\n  setStatus,\n  color = 'blue',\n  style = null,\n  type = 'QUERY',\n  attrs = null,\n  disabled = false,\n}) {\n  // Hooks\n  const { api } = useSubstrate();\n  const [unsub, setUnsub] = useState(null);\n  const [sudoKey, setSudoKey] = useState(null);\n\n  const { palletRpc, callable, inputParams, paramFields } = attrs;\n\n  const isQuery = () => type === 'QUERY';\n  const isSudo = () => type === 'SUDO-TX';\n  const isUncheckedSudo = () => type === 'UNCHECKED-SUDO-TX';\n  const isUnsigned = () => type === 'UNSIGNED-TX';\n  const isSigned = () => type === 'SIGNED-TX';\n  const isRpc = () => type === 'RPC';\n  const isConstant = () => type === 'CONSTANT';\n\n  const loadSudoKey = () => {\n    (async function () {\n      if (!api || !api.query.sudo) {\n        return;\n      }\n      const sudoKey = await api.query.sudo.key();\n      sudoKey.isEmpty ? setSudoKey(null) : setSudoKey(sudoKey.toString());\n    })();\n  };\n\n  useEffect(loadSudoKey, [api]);\n\n  const getFromAcct = async () => {\n    const {\n      address,\n      meta: { source, isInjected },\n    } = accountPair;\n    let fromAcct;\n\n    // signer is from Polkadot-js browser extension\n    if (isInjected) {\n      const injected = await web3FromSource(source);\n      fromAcct = address;\n      api.setSigner(injected.signer);\n    } else {\n      fromAcct = accountPair;\n    }\n\n    return fromAcct;\n  };\n\n  const txResHandler = ({ status }) =>\n    status.isFinalized\n      ? setStatus(`😉 Finalized. Block hash: ${status.asFinalized.toString()}`)\n      : setStatus(`Current transaction status: ${status.type}`);\n\n  const txErrHandler = err => {\n    console.log('err in template', err);\n    console.log('err in template string', err.toString());\n    setStatus(`😞 Transaction Failed: ${err.toString()}`);\n  };\n\n  const sudoTx = async () => {\n    const fromAcct = await getFromAcct();\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n    const txExecute = transformed\n      ? api.tx.sudo.sudo(api.tx[palletRpc][callable](...transformed))\n      : api.tx.sudo.sudo(api.tx[palletRpc][callable]());\n\n    const unsub = txExecute\n      .signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler);\n    setUnsub(() => unsub);\n  };\n\n  const uncheckedSudoTx = async () => {\n    const fromAcct = await getFromAcct();\n    const txExecute = api.tx.sudo.sudoUncheckedWeight(\n      api.tx[palletRpc][callable](...inputParams),\n      0\n    );\n\n    const unsub = txExecute\n      .signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler);\n    setUnsub(() => unsub);\n  };\n\n  const signedTx = async () => {\n    const fromAcct = await getFromAcct();\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n\n    console.log('paramFields', paramFields);\n    console.log('inputParams', inputParams);\n    console.log('transformed', transformed);\n\n    const txExecute = transformed\n      ? api.tx[palletRpc][callable](...transformed)\n      : api.tx[palletRpc][callable]();\n\n    const unsub = await txExecute\n      .signAndSend(fromAcct, txResHandler)\n      .catch(txErrHandler);\n    setUnsub(() => unsub);\n  };\n\n  const unsignedTx = async () => {\n    const transformed = transformParams(paramFields, inputParams);\n    // transformed can be empty parameters\n    const txExecute = transformed\n      ? api.tx[palletRpc][callable](...transformed)\n      : api.tx[palletRpc][callable]();\n\n    const unsub = await txExecute.send(txResHandler).catch(txErrHandler);\n    setUnsub(() => unsub);\n  };\n\n  const queryResHandler = result =>\n    result.isNone ? setStatus('None') : setStatus(result.toString());\n\n  const query = async () => {\n    const transformed = transformParams(paramFields, inputParams);\n    const unsub = await api.query[palletRpc][callable](\n      ...transformed,\n      queryResHandler\n    );\n    setUnsub(() => unsub);\n  };\n\n  const rpc = async () => {\n    const transformed = transformParams(paramFields, inputParams, {\n      emptyAsNull: false,\n    });\n    const unsub = await api.rpc[palletRpc][callable](\n      ...transformed,\n      queryResHandler\n    );\n    setUnsub(() => unsub);\n  };\n\n  const constant = () => {\n    const result = api.consts[palletRpc][callable];\n    result.isNone ? setStatus('None') : setStatus(result.toString());\n  };\n\n  const transaction = async () => {\n    if (typeof unsub === 'function') {\n      unsub();\n      setUnsub(null);\n    }\n\n    setStatus('Sending...');\n\n    (isSudo() && sudoTx()) ||\n      (isUncheckedSudo() && uncheckedSudoTx()) ||\n      (isSigned() && signedTx()) ||\n      (isUnsigned() && unsignedTx()) ||\n      (isQuery() && query()) ||\n      (isRpc() && rpc()) ||\n      (isConstant() && constant());\n  };\n\n  const transformParams = (\n    paramFields,\n    inputParams,\n    opts = { emptyAsNull: true }\n  ) => {\n    // if `opts.emptyAsNull` is true, empty param value will be added to res as `null`.\n    //   Otherwise, it will not be added\n    const paramVal = inputParams.map(inputParam => {\n      // To cater the js quirk that `null` is a type of `object`.\n      if (\n        typeof inputParam === 'object' &&\n        inputParam !== null &&\n        typeof inputParam.value === 'string'\n      ) {\n        return inputParam.value.trim();\n      } else if (typeof inputParam === 'string') {\n        return inputParam.trim();\n      }\n      return inputParam;\n    });\n    const params = paramFields.map((field, ind) => ({\n      ...field,\n      value: paramVal[ind] || null,\n    }));\n\n    return params.reduce((memo, { type = 'string', value }) => {\n      if (value == null || value === '')\n        return opts.emptyAsNull ? [...memo, null] : memo;\n\n      let converted = value;\n\n      // Deal with a vector\n      if (type.indexOf('Vec<') >= 0) {\n        converted = converted.split(',').map(e => e.trim());\n        converted = converted.map(single =>\n          isNumType(type)\n            ? single.indexOf('.') >= 0\n              ? Number.parseFloat(single)\n              : Number.parseInt(single)\n            : single\n        );\n        return [...memo, converted];\n      }\n\n      // Deal with a single value\n      if (isNumType(type)) {\n        converted =\n          converted.indexOf('.') >= 0\n            ? Number.parseFloat(converted)\n            : Number.parseInt(converted);\n      }\n      return [...memo, converted];\n    }, []);\n  };\n\n  const isNumType = type =>\n    utils.paramConversion.num.some(el => type.indexOf(el) >= 0);\n\n  const allParamsFilled = () => {\n    if (paramFields.length === 0) {\n      return true;\n    }\n\n    return paramFields.every((paramField, ind) => {\n      const param = inputParams[ind];\n      if (paramField.optional) {\n        return true;\n      }\n      if (param == null) {\n        return false;\n      }\n\n      const value = typeof param === 'object' ? param.value : param;\n      return value !== null && value !== '';\n    });\n  };\n\n  const isSudoer = acctPair => {\n    if (!sudoKey || !acctPair) {\n      return false;\n    }\n    return acctPair.address === sudoKey;\n  };\n\n  return (\n    <Button\n      basic\n      color={color}\n      style={style}\n      type=\"submit\"\n      onClick={transaction}\n      disabled={\n        disabled ||\n        !palletRpc ||\n        !callable ||\n        !allParamsFilled() ||\n        ((isSudo() || isUncheckedSudo()) && !isSudoer(accountPair))\n      }\n    >\n      {label}\n    </Button>\n  );\n}\n\n// prop type checking\nTxButton.propTypes = {\n  accountPair: PropTypes.object,\n  setStatus: PropTypes.func.isRequired,\n  type: PropTypes.oneOf([\n    'QUERY',\n    'RPC',\n    'SIGNED-TX',\n    'UNSIGNED-TX',\n    'SUDO-TX',\n    'UNCHECKED-SUDO-TX',\n    'CONSTANT',\n  ]).isRequired,\n  attrs: PropTypes.shape({\n    palletRpc: PropTypes.string,\n    callable: PropTypes.string,\n    inputParams: PropTypes.array,\n    paramFields: PropTypes.array,\n  }).isRequired,\n};\n\nfunction TxGroupButton(props) {\n  return (\n    <Button.Group>\n      <TxButton label=\"Unsigned\" type=\"UNSIGNED-TX\" color=\"grey\" {...props} />\n      <Button.Or />\n      <TxButton label=\"Signed\" type=\"SIGNED-TX\" color=\"blue\" {...props} />\n      <Button.Or />\n      <TxButton label=\"SUDO\" type=\"SUDO-TX\" color=\"red\" {...props} />\n    </Button.Group>\n  );\n}\n\nexport { TxButton, TxGroupButton };\n","// This component will simply add utility functions to your developer console.\nimport { useSubstrate } from '../';\n\nexport default function DeveloperConsole (props) {\n  const { api, apiState, keyring, keyringState } = useSubstrate();\n  if (apiState === 'READY') { window.api = api; }\n  if (keyringState === 'READY') { window.keyring = keyring; }\n  window.util = require('@polkadot/util');\n  window.utilCrypto = require('@polkadot/util-crypto');\n\n  return null;\n}\n","import React, { useState, useEffect } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport {\n  Menu,\n  Button,\n  Dropdown,\n  Container,\n  Icon,\n  Image,\n  Label,\n} from 'semantic-ui-react';\n\nimport { useSubstrate } from '../../../substrate-lib';\n\nfunction Main(props) {\n  const { keyring } = useSubstrate();\n  const { setAccountAddress } = props;\n  const [accountSelected, setAccountSelected] = useState('');\n\n  // Get the list of accounts we possess the private key for\n  const keyringOptions = keyring.getPairs().map(account => ({\n    key: account.address,\n    value: account.address,\n    text: account.meta.name.toUpperCase(),\n    icon: 'user',\n  }));\n\n  const initialAddress =\n    keyringOptions.length > 0 ? keyringOptions[0].value : '';\n\n  // Set the initial address\n  useEffect(() => {\n    setAccountAddress(initialAddress);\n    setAccountSelected(initialAddress);\n  }, [setAccountAddress, initialAddress]);\n\n  const onChange = address => {\n    // Update state with new account address\n    setAccountAddress(address);\n    setAccountSelected(address);\n  };\n\n  return (\n    <Menu\n      attached=\"top\"\n      tabular\n      style={{\n        backgroundColor: '#fff',\n        borderColor: '#fff',\n        paddingTop: '1em',\n        paddingBottom: '1em',\n      }}\n    >\n      <Container>\n        <Menu.Menu>\n          <Image\n            src={`${process.env.PUBLIC_URL}/assets/substrate-logo.png`}\n            size=\"mini\"\n          />\n        </Menu.Menu>\n        <Menu.Menu position=\"right\" style={{ alignItems: 'center' }}>\n          {!accountSelected ? (\n            <span>\n              Add your account with the{' '}\n              <a\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://github.com/polkadot-js/extension\"\n              >\n                Polkadot JS Extension\n              </a>\n            </span>\n          ) : null}\n          <CopyToClipboard text={accountSelected}>\n            <Button\n              basic\n              circular\n              size=\"large\"\n              icon=\"user\"\n              color={accountSelected ? 'green' : 'red'}\n            />\n          </CopyToClipboard>\n          <Dropdown\n            search\n            selection\n            clearable\n            placeholder=\"Select an account\"\n            options={keyringOptions}\n            onChange={(_, dropdown) => {\n              onChange(dropdown.value);\n            }}\n            value={accountSelected}\n          />\n          <BalanceAnnotation accountSelected={accountSelected} />\n        </Menu.Menu>\n      </Container>\n    </Menu>\n  );\n}\n\nfunction BalanceAnnotation(props) {\n  const { accountSelected } = props;\n  const { api } = useSubstrate();\n  const [accountBalance, setAccountBalance] = useState(0);\n\n  // When account address changes, update subscriptions\n  useEffect(() => {\n    let unsubscribe;\n\n    // If the user has selected an address, create a new subscription\n    accountSelected &&\n      api.query.system\n        .account(accountSelected, balance => {\n          setAccountBalance(balance.data.free.toHuman());\n        })\n        .then(unsub => {\n          unsubscribe = unsub;\n        })\n        .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api, accountSelected]);\n\n  return accountSelected ? (\n    <Label pointing=\"left\">\n      <Icon name=\"money\" color=\"green\" />\n      {accountBalance}\n    </Label>\n  ) : null;\n}\n\nexport default function AccountSelector(props) {\n  const { api, keyring } = useSubstrate();\n  return keyring.getPairs && api.query ? <Main {...props} /> : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Table, Grid, Button } from 'semantic-ui-react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { useSubstrate } from '../../../substrate-lib';\n\nexport default function Main(props) {\n  const { api, keyring } = useSubstrate();\n  const accounts = keyring.getPairs();\n  const [balances, setBalances] = useState({});\n\n  useEffect(() => {\n    const addresses = keyring.getPairs().map(account => account.address);\n    let unsubscribeAll = null;\n\n    api.query.system.account\n      .multi(addresses, balances => {\n        const balancesMap = addresses.reduce(\n          (acc, address, index) => ({\n            ...acc,\n            [address]: balances[index].data.free.toHuman(),\n          }),\n          {}\n        );\n        setBalances(balancesMap);\n      })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [api, keyring, setBalances]);\n\n  return (\n    <Grid.Column>\n      <h1>Balances</h1>\n      <Table celled striped size=\"small\">\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell width={3} textAlign=\"right\">\n              <strong>Name</strong>\n            </Table.Cell>\n            <Table.Cell width={10}>\n              <strong>Address</strong>\n            </Table.Cell>\n            <Table.Cell width={3}>\n              <strong>Balance</strong>\n            </Table.Cell>\n          </Table.Row>\n          {accounts.map(account => (\n            <Table.Row key={account.address}>\n              <Table.Cell width={3} textAlign=\"right\">\n                {account.meta.name}\n              </Table.Cell>\n              <Table.Cell width={10}>\n                <span style={{ display: 'inline-block', minWidth: '31em' }}>\n                  {account.address}\n                </span>\n                <CopyToClipboard text={account.address}>\n                  <Button\n                    basic\n                    circular\n                    compact\n                    size=\"mini\"\n                    color=\"blue\"\n                    icon=\"copy outline\"\n                  />\n                </CopyToClipboard>\n              </Table.Cell>\n              <Table.Cell width={3}>\n                {balances &&\n                  balances[account.address] &&\n                  balances[account.address]}\n              </Table.Cell>\n            </Table.Row>\n          ))}\n        </Table.Body>\n      </Table>\n    </Grid.Column>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../../../substrate-lib';\n\nfunction Main(props) {\n  const { api } = useSubstrate();\n  const { finalized } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign=\"center\">\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name=\"time\" /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function BlockNumber(props) {\n  const { api } = useSubstrate();\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Feed, Grid, Button } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../../../substrate-lib';\n\n// Events to be filtered from feed\nconst FILTERED_EVENTS = [\n  'system:ExtrinsicSuccess::(phase={\"applyExtrinsic\":0})',\n];\n\nconst eventName = ev => `${ev.section}:${ev.method}`;\nconst eventParams = ev => JSON.stringify(ev.data);\n\nfunction Main(props) {\n  const { api } = useSubstrate();\n  const [eventFeed, setEventFeed] = useState([]);\n\n  useEffect(() => {\n    let unsub = null;\n    let keyNum = 0;\n    const allEvents = async () => {\n      unsub = await api.query.system.events(events => {\n        // loop through the Vec<EventRecord>\n        events.forEach(record => {\n          // extract the phase, event and the event types\n          const { event, phase } = record;\n\n          // show what we are busy with\n          const evHuman = event.toHuman();\n          const evName = eventName(evHuman);\n          const evParams = eventParams(evHuman);\n          const evNamePhase = `${evName}::(phase=${phase.toString()})`;\n\n          if (FILTERED_EVENTS.includes(evNamePhase)) return;\n\n          setEventFeed(e => [\n            {\n              key: keyNum,\n              icon: 'bell',\n              summary: evName,\n              content: evParams,\n            },\n            ...e,\n          ]);\n\n          keyNum += 1;\n        });\n      });\n    };\n\n    allEvents();\n    return () => unsub && unsub();\n  }, [api.query.system]);\n\n  const { feedMaxHeight = 250 } = props;\n\n  return (\n    <Grid.Column width={8}>\n      <h1 style={{ float: 'left' }}>Events</h1>\n      <Button\n        basic\n        circular\n        size=\"mini\"\n        color=\"grey\"\n        floated=\"right\"\n        icon=\"erase\"\n        onClick={_ => setEventFeed([])}\n      />\n      <Feed\n        style={{ clear: 'both', overflow: 'auto', maxHeight: feedMaxHeight }}\n        events={eventFeed}\n      />\n    </Grid.Column>\n  );\n}\n\nexport default function Events(props) {\n  const { api } = useSubstrate();\n  return api.query && api.query.system && api.query.system.events ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Form, Dropdown, Input, Label } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../../../substrate-lib';\nimport { TxButton, TxGroupButton } from '../../../substrate-lib/components';\n\nconst argIsOptional = arg => arg.type.toString().startsWith('Option<');\n\nfunction Main(props) {\n  const { api, jsonrpc } = useSubstrate();\n  const { accountPair } = props;\n  const [status, setStatus] = useState(null);\n\n  const [interxType, setInterxType] = useState('EXTRINSIC');\n  const [palletRPCs, setPalletRPCs] = useState([]);\n  const [callables, setCallables] = useState([]);\n  const [paramFields, setParamFields] = useState([]);\n\n  const initFormState = {\n    palletRpc: '',\n    callable: '',\n    inputParams: [],\n  };\n\n  const [formState, setFormState] = useState(initFormState);\n  const { palletRpc, callable, inputParams } = formState;\n\n  const getApiType = (api, interxType) => {\n    if (interxType === 'QUERY') {\n      return api.query;\n    } else if (interxType === 'EXTRINSIC') {\n      return api.tx;\n    } else if (interxType === 'RPC') {\n      return api.rpc;\n    } else {\n      return api.consts;\n    }\n  };\n\n  const updatePalletRPCs = () => {\n    if (!api) {\n      return;\n    }\n    const apiType = getApiType(api, interxType);\n    const palletRPCs = Object.keys(apiType)\n      .sort()\n      .filter(pr => Object.keys(apiType[pr]).length > 0)\n      .map(pr => ({ key: pr, value: pr, text: pr }));\n    setPalletRPCs(palletRPCs);\n  };\n\n  const updateCallables = () => {\n    if (!api || palletRpc === '') {\n      return;\n    }\n    const callables = Object.keys(getApiType(api, interxType)[palletRpc])\n      .sort()\n      .map(c => ({ key: c, value: c, text: c }));\n    setCallables(callables);\n  };\n\n  const updateParamFields = () => {\n    if (!api || palletRpc === '' || callable === '') {\n      setParamFields([]);\n      return;\n    }\n\n    let paramFields = [];\n\n    if (interxType === 'QUERY') {\n      const metaType = api.query[palletRpc][callable].meta.type;\n      if (metaType.isPlain) {\n        // Do nothing as `paramFields` is already set to []\n      } else if (metaType.isMap) {\n        paramFields = [\n          {\n            name: metaType.asMap.key.toString(),\n            type: metaType.asMap.key.toString(),\n            optional: false,\n          },\n        ];\n      } else if (metaType.isDoubleMap) {\n        paramFields = [\n          {\n            name: metaType.asDoubleMap.key1.toString(),\n            type: metaType.asDoubleMap.key1.toString(),\n            optional: false,\n          },\n          {\n            name: metaType.asDoubleMap.key2.toString(),\n            type: metaType.asDoubleMap.key2.toString(),\n            optional: false,\n          },\n        ];\n      }\n    } else if (interxType === 'EXTRINSIC') {\n      const metaArgs = api.tx[palletRpc][callable].meta.args;\n\n      if (metaArgs && metaArgs.length > 0) {\n        paramFields = metaArgs.map(arg => ({\n          name: arg.name.toString(),\n          type: arg.type.toString(),\n          optional: argIsOptional(arg),\n        }));\n      }\n    } else if (interxType === 'RPC') {\n      let metaParam = [];\n\n      if (jsonrpc[palletRpc] && jsonrpc[palletRpc][callable]) {\n        metaParam = jsonrpc[palletRpc][callable].params;\n      }\n\n      if (metaParam.length > 0) {\n        paramFields = metaParam.map(arg => ({\n          name: arg.name,\n          type: arg.type,\n          optional: arg.isOptional || false,\n        }));\n      }\n    } else if (interxType === 'CONSTANT') {\n      paramFields = [];\n    }\n\n    setParamFields(paramFields);\n  };\n\n  useEffect(updatePalletRPCs, [api, interxType]);\n  useEffect(updateCallables, [api, interxType, palletRpc]);\n  useEffect(updateParamFields, [api, interxType, palletRpc, callable, jsonrpc]);\n\n  const onPalletCallableParamChange = (_, data) => {\n    setFormState(formState => {\n      let res;\n      const { state, value } = data;\n\n      if (typeof state === 'object') {\n        // Input parameter updated\n        const {\n          ind,\n          paramField: { type },\n        } = state;\n        const inputParams = [...formState.inputParams];\n        inputParams[ind] = { type, value };\n        res = { ...formState, inputParams };\n      } else if (state === 'palletRpc') {\n        res = { ...formState, [state]: value, callable: '', inputParams: [] };\n      } else if (state === 'callable') {\n        res = { ...formState, [state]: value, inputParams: [] };\n      }\n      return res;\n    });\n  };\n\n  const onInterxTypeChange = (ev, data) => {\n    setInterxType(data.value);\n    // clear the formState\n    setFormState(initFormState);\n  };\n\n  const getOptionalMsg = interxType =>\n    interxType === 'RPC'\n      ? 'Optional Parameter'\n      : 'Leaving this field as blank will submit a NONE value';\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Pallet Interactor</h1>\n      <Form>\n        <Form.Group style={{ overflowX: 'auto' }} inline>\n          <label>Interaction Type</label>\n          <Form.Radio\n            label=\"Extrinsic\"\n            name=\"interxType\"\n            value=\"EXTRINSIC\"\n            checked={interxType === 'EXTRINSIC'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label=\"Query\"\n            name=\"interxType\"\n            value=\"QUERY\"\n            checked={interxType === 'QUERY'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label=\"RPC\"\n            name=\"interxType\"\n            value=\"RPC\"\n            checked={interxType === 'RPC'}\n            onChange={onInterxTypeChange}\n          />\n          <Form.Radio\n            label=\"Constant\"\n            name=\"interxType\"\n            value=\"CONSTANT\"\n            checked={interxType === 'CONSTANT'}\n            onChange={onInterxTypeChange}\n          />\n        </Form.Group>\n        <Form.Field>\n          <Dropdown\n            placeholder=\"Pallets / RPC\"\n            fluid\n            label=\"Pallet / RPC\"\n            onChange={onPalletCallableParamChange}\n            search\n            selection\n            state=\"palletRpc\"\n            value={palletRpc}\n            options={palletRPCs}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Dropdown\n            placeholder=\"Callables\"\n            fluid\n            label=\"Callable\"\n            onChange={onPalletCallableParamChange}\n            search\n            selection\n            state=\"callable\"\n            value={callable}\n            options={callables}\n          />\n        </Form.Field>\n        {paramFields.map((paramField, ind) => (\n          <Form.Field key={`${paramField.name}-${paramField.type}`}>\n            <Input\n              placeholder={paramField.type}\n              fluid\n              type=\"text\"\n              label={paramField.name}\n              state={{ ind, paramField }}\n              value={inputParams[ind] ? inputParams[ind].value : ''}\n              onChange={onPalletCallableParamChange}\n            />\n            {paramField.optional ? (\n              <Label\n                basic\n                pointing\n                color=\"teal\"\n                content={getOptionalMsg(interxType)}\n              />\n            ) : null}\n          </Form.Field>\n        ))}\n        <Form.Field style={{ textAlign: 'center' }}>\n          <InteractorSubmit\n            accountPair={accountPair}\n            setStatus={setStatus}\n            attrs={{\n              interxType,\n              palletRpc,\n              callable,\n              inputParams,\n              paramFields,\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n\nfunction InteractorSubmit(props) {\n  const {\n    attrs: { interxType },\n  } = props;\n  if (interxType === 'QUERY') {\n    return <TxButton label=\"Query\" type=\"QUERY\" color=\"blue\" {...props} />;\n  } else if (interxType === 'EXTRINSIC') {\n    return <TxGroupButton {...props} />;\n  } else if (interxType === 'RPC' || interxType === 'CONSTANT') {\n    return (\n      <TxButton label=\"Submit\" type={interxType} color=\"blue\" {...props} />\n    );\n  }\n}\n\nexport default function Interactor(props) {\n  const { api } = useSubstrate();\n  return api.tx ? <Main {...props} /> : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Modal, Button, Card } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../../../substrate-lib';\n\nfunction Main(props) {\n  const { api } = useSubstrate();\n  const [metadata, setMetadata] = useState({ data: null, version: null });\n\n  useEffect(() => {\n    const getMetadata = async () => {\n      try {\n        const data = await api.rpc.state.getMetadata();\n        setMetadata({ data, version: data.version });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getMetadata();\n  }, [api.rpc.state]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>Metadata</Card.Header>\n          <Card.Meta>\n            <span>v{metadata.version}</span>\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          <Modal trigger={<Button>Show Metadata</Button>}>\n            <Modal.Header>Runtime Metadata</Modal.Header>\n            <Modal.Content scrolling>\n              <Modal.Description>\n                <pre>\n                  <code>{JSON.stringify(metadata.data, null, 2)}</code>\n                </pre>\n              </Modal.Description>\n            </Modal.Content>\n          </Modal>\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function Metadata(props) {\n  const { api } = useSubstrate();\n  return api.rpc && api.rpc.state && api.rpc.state.getMetadata ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../../../substrate-lib';\n\nfunction Main(props) {\n  const { api, socket } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version(),\n        ]);\n        setNodeInfo({ chain, nodeName, nodeVersion });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getInfo();\n  }, [api.rpc.system]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>{socket}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name=\"setting\" />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function NodeInfo(props) {\n  const { api } = useSubstrate();\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useEffect, useState } from 'react';\nimport { Form, Input, Grid, Card, Statistic } from 'semantic-ui-react';\n\nimport { useSubstrate } from '../../../substrate-lib';\nimport { TxButton } from '../../../substrate-lib/components';\n\nfunction Main(props) {\n  const { api } = useSubstrate();\n  const { accountPair } = props;\n\n  // The transaction submission status\n  const [status, setStatus] = useState('');\n\n  // The currently stored value\n  const [currentValue, setCurrentValue] = useState(0);\n  const [formValue, setFormValue] = useState(0);\n\n  useEffect(() => {\n    let unsubscribe;\n    api.query.templateModule\n      .something(newValue => {\n        // The storage value is an Option<u32>\n        // So we have to check whether it is None first\n        // There is also unwrapOr\n        if (newValue.isNone) {\n          setCurrentValue('<None>');\n        } else {\n          setCurrentValue(newValue.unwrap().toNumber());\n        }\n      })\n      .then(unsub => {\n        unsubscribe = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribe && unsubscribe();\n  }, [api.query.templateModule]);\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Template Module</h1>\n      <Card centered>\n        <Card.Content textAlign=\"center\">\n          <Statistic label=\"Current Value\" value={currentValue} />\n        </Card.Content>\n      </Card>\n      <Form>\n        <Form.Field>\n          <Input\n            label=\"New Value\"\n            state=\"newValue\"\n            type=\"number\"\n            onChange={(_, { value }) => setFormValue(value)}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label=\"Store Something\"\n            type=\"SIGNED-TX\"\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'templateModule',\n              callable: 'doSomething',\n              inputParams: [formValue],\n              paramFields: [true],\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n\nexport default function TemplateModule(props) {\n  const { api } = useSubstrate();\n  return api.query.templateModule && api.query.templateModule.something ? (\n    <Main {...props} />\n  ) : null;\n}\n","import React, { useState } from 'react';\nimport { Form, Input, Grid, Label, Icon } from 'semantic-ui-react';\nimport { TxButton } from '../../../substrate-lib/components';\n\nexport default function Main(props) {\n  const [status, setStatus] = useState(null);\n  const [formState, setFormState] = useState({ addressTo: null, amount: 0 });\n  const { accountPair } = props;\n\n  const onChange = (_, data) =>\n    setFormState(prev => ({ ...prev, [data.state]: data.value }));\n\n  const { addressTo, amount } = formState;\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Transfer</h1>\n      <Form>\n        <Form.Field>\n          <Label basic color=\"teal\">\n            <Icon name=\"hand point right\" />1 Unit = 1000000000000&nbsp;\n          </Label>\n          <Label\n            basic\n            color=\"teal\"\n            style={{ marginLeft: 0, marginTop: '.5em' }}\n          >\n            <Icon name=\"hand point right\" />\n            Transfer more than the existential amount for account with 0 balance\n          </Label>\n        </Form.Field>\n\n        <Form.Field>\n          <Input\n            fluid\n            label=\"To\"\n            type=\"text\"\n            placeholder=\"address\"\n            state=\"addressTo\"\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field>\n          <Input\n            fluid\n            label=\"Amount\"\n            type=\"number\"\n            state=\"amount\"\n            onChange={onChange}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label=\"Submit\"\n            type=\"SIGNED-TX\"\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'balances',\n              callable: 'transfer',\n              inputParams: [addressTo, amount],\n              paramFields: [true, true],\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n","import React, { useState } from 'react';\nimport { Form, Input, Grid } from 'semantic-ui-react';\nimport { TxButton } from '../../../substrate-lib/components';\n\nexport default function Main(props) {\n  const [status, setStatus] = useState('');\n  const [proposal, setProposal] = useState({});\n  const { accountPair } = props;\n\n  const bufferToHex = buffer => {\n    return Array.from(new Uint8Array(buffer))\n      .map(b => b.toString(16).padStart(2, '0'))\n      .join('');\n  };\n\n  const handleFileChosen = file => {\n    const fileReader = new FileReader();\n    fileReader.onloadend = e => {\n      const content = bufferToHex(fileReader.result);\n      setProposal(`0x${content}`);\n    };\n\n    fileReader.readAsArrayBuffer(file);\n  };\n\n  return (\n    <Grid.Column width={8}>\n      <h1>Upgrade Runtime</h1>\n      <Form>\n        <Form.Field>\n          <Input\n            type=\"file\"\n            id=\"file\"\n            label=\"Wasm File\"\n            accept=\".wasm\"\n            onChange={e => handleFileChosen(e.target.files[0])}\n          />\n        </Form.Field>\n        <Form.Field style={{ textAlign: 'center' }}>\n          <TxButton\n            accountPair={accountPair}\n            label=\"Upgrade\"\n            type=\"UNCHECKED-SUDO-TX\"\n            setStatus={setStatus}\n            attrs={{\n              palletRpc: 'system',\n              callable: 'setCode',\n              inputParams: [proposal],\n              paramFields: [true],\n            }}\n          />\n        </Form.Field>\n        <div style={{ overflowWrap: 'break-word' }}>{status}</div>\n      </Form>\n    </Grid.Column>\n  );\n}\n","import React, { useState, createRef } from 'react';\nimport {\n  Container,\n  Dimmer,\n  Loader,\n  Grid,\n  Sticky,\n  Message,\n} from 'semantic-ui-react';\nimport { useSubstrate } from '../../substrate-lib';\nimport { DeveloperConsole } from '../../substrate-lib/components';\n\nimport AccountSelector from './components/AccountSelector';\nimport Balances from './components/Balances';\nimport BlockNumber from './components/BlockNumber';\nimport Events from './components/Events';\nimport Interactor from './components/Interactor';\nimport Metadata from './components/Metadata';\nimport NodeInfo from './components/NodeInfo';\nimport TemplateModule from './components/TemplateModule';\nimport Transfer from './components/Transfer';\nimport Upgrade from './components/Upgrade';\n\nconst TemplateResources = () => {\n  const [accountAddress, setAccountAddress] = useState(null);\n  const { apiState, keyring, keyringState, apiError } = useSubstrate();\n  const accountPair =\n    accountAddress &&\n    keyringState === 'READY' &&\n    keyring.getPair(accountAddress);\n\n  const loader = text => (\n    <Dimmer active>\n      <Loader size=\"small\">{text}</Loader>\n    </Dimmer>\n  );\n\n  const message = err => (\n    <Grid centered columns={2} padded>\n      <Grid.Column>\n        <Message\n          negative\n          compact\n          floating\n          header=\"Error Connecting to Substrate\"\n          content={`${JSON.stringify(err, null, 4)}`}\n        />\n      </Grid.Column>\n    </Grid>\n  );\n\n  if (apiState === 'ERROR') return message(apiError);\n  else if (apiState !== 'READY') return loader('Connecting to Substrate');\n\n  if (keyringState !== 'READY') {\n    return loader(\n      \"Loading accounts (please review any extension's authorization)\"\n    );\n  }\n\n  const contextRef = createRef();\n\n  return (\n    <div ref={contextRef}>\n      <Sticky context={contextRef}>\n        <AccountSelector setAccountAddress={setAccountAddress} />\n      </Sticky>\n      <Container>\n        <Grid stackable columns=\"equal\">\n          <Grid.Row stretched>\n            <NodeInfo />\n            <Metadata />\n            <BlockNumber />\n            <BlockNumber finalized />\n          </Grid.Row>\n          <Grid.Row stretched>\n            <Balances />\n          </Grid.Row>\n          <Grid.Row>\n            <Transfer accountPair={accountPair} />\n            <Upgrade accountPair={accountPair} />\n          </Grid.Row>\n          <Grid.Row>\n            <Interactor accountPair={accountPair} />\n            <Events />\n          </Grid.Row>\n          <Grid.Row>\n            <TemplateModule accountPair={accountPair} />\n          </Grid.Row>\n        </Grid>\n      </Container>\n      <DeveloperConsole />\n    </div>\n  );\n};\n\nTemplateResources.displayName = 'TemplateResources';\n\nexport { TemplateResources };\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  selectedAccountBalance: '',\n  keyringOptions: [],\n  selectedKeyring: {\n    key: '',\n    value: '',\n    text: '',\n  },\n};\n\nconst accountSlice = createSlice({\n  name: 'account',\n  initialState,\n  reducers: {\n    setSelectedKeyringAction(state, action) {\n      state.selectedKeyring = action.payload;\n    },\n    setBalance(state, action) {\n      state.selectedAccountBalance = action.payload;\n    },\n    setKeyringOptionsAction(state, action) {\n      state.keyringOptions = action.payload;\n    },\n  },\n});\n\nexport const {\n  changeUsername,\n  setSelectedKeyringAction,\n  setBalance,\n  setKeyringOptionsAction,\n} = accountSlice.actions;\n\nexport default accountSlice.reducer;\n","import { useSelector, useDispatch } from 'react-redux';\nimport {\n  setKeyringOptionsAction,\n  setSelectedKeyringAction,\n} from '../store/slices/accountSlice';\n\nconst useUser = () => {\n  const dispatch = useDispatch();\n\n  const selectedKeyring = useSelector(state => state.account.selectedKeyring);\n  const selectedAccountBalance = useSelector(\n    state => state.account.selectedAccountBalance\n  );\n  const keyringOptions = useSelector(state => state.account.keyringOptions);\n\n  const setKeyringOptions = keyringOptionsArray => {\n    dispatch(setKeyringOptionsAction(keyringOptionsArray));\n    dispatch(\n      setSelectedKeyringAction({\n        key: keyringOptionsArray[0].text,\n        value: keyringOptionsArray[0].value,\n        text: keyringOptionsArray[0].text,\n      })\n    );\n  };\n\n  const setSelectedKeyring = keyring => {\n    dispatch(setSelectedKeyringAction(keyring));\n  };\n\n  return {\n    selectedKeyring,\n    selectedAccountBalance,\n    setKeyringOptions,\n    keyringOptions,\n    setSelectedKeyring,\n  };\n};\n\nexport { useUser };\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  status: '',\n  message: '',\n};\n\nconst statusSlice = createSlice({\n  name: 'status',\n  initialState,\n  reducers: {\n    setStatus(state, action) {\n      state.status = action.payload;\n    },\n    setStatusMessage(state, action) {\n      state.message = action.payload;\n    },\n  },\n});\n\nexport const { setStatus, setStatusMessage } = statusSlice.actions;\n\nexport default statusSlice.reducer;\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  setStatus as setStatusAction,\n  setStatusMessage as setTheStatusMessage,\n} from '../store/slices/statusSlice';\nconst useStatus = () => {\n  const dispatch = useDispatch();\n  const status = useSelector(state => state.status.status);\n  const message = useSelector(state => state.status.message);\n  const setStatus = useCallback(\n    status => {\n      dispatch(setStatusAction(status));\n    },\n    [dispatch]\n  );\n  const setStatusMessage = useCallback(\n    statusMessage => {\n      dispatch(setTheStatusMessage(statusMessage));\n    },\n    [dispatch]\n  );\n\n  return {\n    status,\n    message,\n    setStatus,\n    setStatusMessage,\n  };\n};\n\nexport { useStatus };\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  profile: false,\n  tasks: false,\n};\n\nconst loadersSlice = createSlice({\n  name: 'loaders',\n  initialState,\n  reducers: {\n    setLoading(state, action) {\n      state[action.payload.type] = action.payload.value;\n    },\n  },\n});\n\nexport const { setLoading } = loadersSlice.actions;\n\nexport default loadersSlice.reducer;\n","import { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setLoading as setLoadingAction } from '../store/slices/loadersSlice';\n\nconst useLoader = () => {\n  const dispatch = useDispatch();\n  const loadingProfile = useSelector(state => state.loaders.profile);\n  const loadingTasks = useSelector(state => state.loaders.profile);\n\n  const setLoading = useCallback(\n    loadingBoolean => {\n      dispatch(setLoadingAction(loadingBoolean));\n    },\n    [dispatch]\n  );\n\n  return {\n    loadingProfile,\n    loadingTasks,\n    setLoading,\n  };\n};\n\nexport { useLoader };\n","export const statusTypes = {\n  INIT: 'INIT',\n  IN_BLOCK: 'IN_BLOCK',\n  FINALIZED: 'FINALIZED',\n  ERROR: 'ERROR',\n};\n\nexport const loadingTypes = {\n  KEYRING: 'keyring',\n  PROFILE: 'profile',\n  TASKS: 'tasks',\n  DAO: 'dao',\n};\n\nexport const toastTypes = {\n  DEFAULT: '',\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warn',\n  ERROR: 'error',\n};\n\nexport const pallets = {\n  PROFILE: 'profile',\n  TASK: 'task',\n  DAO: 'dao',\n};\n\nexport const profileCallables = {\n  PROFILES: 'profiles',\n  CREATE_PROFILE: 'createProfile',\n  UPDATE_PROFILE: 'updateProfile',\n  REMOVE_PROFILE: 'removeProfile',\n};\n\nexport const taskCallables = {\n  TASKS_OWNED: 'tasksOwned',\n  GET_TASK: 'tasks',\n  CREATE_TASK: 'createTask',\n  START_TASK: 'startTask',\n  COMPLETE_TASK: 'completeTask',\n  REMOVE_TASK: 'removeTask',\n  // TODO: not present in BE yet;\n  UPDATE_TASK: 'updateTask',\n};\n\nexport const daoCallables = {\n  ADD_MEMBERS: 'addMembers',\n  ADD_TASKS: 'addTasks',\n  CREATE_ORGANIZATION: 'createOrganization',\n  CREATE_VISION: 'createVision',\n  DISSOLVE_ORGANIZATION: 'dissolveOrganization',\n  REMOVE_MEMBERS: 'removeMembers',\n  REMOVE_TASKS: 'removeTasks',\n  REMOVE_VISION: 'removeVision',\n  SIGN_VISION: 'signVision',\n  UNSIGN_VISION: 'unsignVision',\n  // QUERY callables:\n  MEMBER_OF: 'memberOf',\n  ORGANIZATION_COUNT: 'organizationCount',\n  VISION: 'vision',\n  VISION_COUNT: 'visionCount',\n  APPLICANTS_TO_ORGANIZATION: 'applicantsToOrganization',\n};\n","import { toast as toastify } from 'react-toastify';\nimport { toastTypes } from '../types';\n\nconst useToast = () => {\n  const options = {\n    position: 'bottom-center',\n    hideProgressBar: true,\n  };\n  const toast = (message, type) => {\n    if (type === toastTypes.INFO) {\n      toastify.info(message, options);\n    }\n\n    if (type === toastTypes.SUCCESS) {\n      toastify.success(message, options);\n    }\n\n    if (type === toastTypes.WARNING) {\n      toastify.warn(message, options);\n    }\n\n    if (type === toastTypes.ERROR) {\n      toastify.error(message, options);\n    }\n  };\n\n  return {\n    toast,\n  };\n};\n\nexport { useToast };\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  totalOrganizations: 0,\n  totalVisions: 0,\n  joinedOrganizations: [],\n  suggestedVisions: [],\n  visionNameForAction: '',\n  organizationNameForAction: '',\n  memberOrTaskForAction: '',\n  applicantsToOrganization: [],\n};\n\nconst daoSlice = createSlice({\n  name: 'dao',\n  initialState,\n  reducers: {\n    setTotalOrganizations(state, action) {\n      state.totalOrganizations = action.payload;\n    },\n    setTotalVisions(state, action) {\n      state.totalVisions = action.payload;\n    },\n    setJoinedOrganizations(state, action) {\n      state.joinedOrganizations = action.payload;\n    },\n    setSuggestedVisions(state, action) {\n      state.suggestedVisions = action.payload;\n    },\n    setVisionName(state, action) {\n      state.visionNameForAction = action.payload;\n    },\n    setOrganizationName(state, action) {\n      state.organizationNameForAction = action.payload;\n    },\n    setMemberOrTask(state, action) {\n      state.memberOrTaskForAction = action.payload;\n    },\n    setApplicants(state, action) {\n      state.applicantsToOrganization = action.payload;\n    },\n    resetState(state) {\n      state.visionNameForAction = '';\n      state.organizationNameForAction = '';\n      state.memberOrTaskForAction = '';\n    },\n  },\n});\n\nexport const {\n  setTotalOrganizations,\n  setTotalVisions,\n  setJoinedOrganizations,\n  setSuggestedVisions,\n  setVisionName,\n  setOrganizationName,\n  setMemberOrTask,\n  setApplicants,\n  resetState,\n} = daoSlice.actions;\n\nexport default daoSlice.reducer;\n","import { useSelector } from 'react-redux';\n\nconst useGeneral = () => {\n  const sidebarWidth = useSelector(state => state.general.sidebarWidth);\n\n  return {\n    sidebarWidth,\n  };\n};\n\nexport { useGeneral };\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  form: {\n    interests: [],\n    username: '',\n  },\n  data: null,\n};\n\nconst profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    setProfile(state, action) {\n      state.data = action.payload;\n    },\n    setFormInterests(state, action) {\n      state.form = {\n        ...state.form,\n        interests: action.payload,\n      };\n    },\n    setUsername(state, action) {\n      state.form = {\n        ...state.form,\n        username: action.payload,\n      };\n    },\n  },\n});\n\nexport const { setProfile, setFormInterests, setUsername } =\n  profileSlice.actions;\n\nexport default profileSlice.reducer;\n","/* eslint-disable indent */\nimport { useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { web3FromSource } from '@polkadot/extension-dapp';\nimport { useSubstrate } from '../substrate-lib';\n\nimport {\n  setProfile,\n  setFormInterests,\n  setUsername as setUsernameAction,\n} from '../store/slices/profileSlice';\nimport { useUser } from './useUser';\nimport { useStatus } from './useStatus';\nimport { useLoader } from './useLoader';\nimport { useUtils } from './useUtils';\nimport {\n  statusTypes,\n  pallets,\n  profileCallables,\n  toastTypes,\n  loadingTypes,\n} from '../types';\nimport { useToast } from './useToast';\n\nconst useProfile = () => {\n  const dispatch = useDispatch();\n  const { api, keyring, keyringState } = useSubstrate();\n  const [unsub, setUnsub] = useState(null);\n  const [actionLoading, setActionLoading] = useState(false);\n\n  const { selectedKeyring } = useUser();\n  const { setStatus, setStatusMessage } = useStatus();\n  const { setLoading } = useLoader();\n  const { transformParams } = useUtils();\n  const { toast } = useToast();\n\n  const profileData = useSelector(state => state.profile.data);\n  const interests = useSelector(state => state.profile.form.interests);\n  const username = useSelector(state => state.profile.form.username);\n  const reputationPoints = useSelector(\n    state => state.profile?.data?.reputation\n  );\n  const reputation = reputationPoints?.toString() || 'N/A';\n\n  const populateFormInterests = useCallback(\n    interestsArray => {\n      dispatch(setFormInterests(interestsArray));\n    },\n    [dispatch]\n  );\n\n  const setUsername = useCallback(\n    username => {\n      dispatch(setUsernameAction(username));\n    },\n    [dispatch]\n  );\n\n  const queryResponseHandler = useCallback(\n    result => {\n      setLoading({ type: loadingTypes.PROFILE, value: false });\n      setStatusMessage('');\n\n      const setAllData = profileData => {\n        dispatch(setProfile(profileData));\n        populateFormInterests(profileData?.interests?.split(','));\n        setUsername(profileData?.name);\n      };\n\n      result.isNone ? dispatch(setProfile(null)) : setAllData(result.toHuman());\n    },\n    [dispatch, setStatusMessage, setLoading, populateFormInterests, setUsername]\n  );\n\n  // TODO: figure out how to make it simpler to check when API is availabile so it doesn't crash;\n  const getProfile = useCallback(() => {\n    setLoading({ type: loadingTypes.PROFILE, value: true });\n    setStatusMessage('Loading account / profile...');\n    if (\n      selectedKeyring.value &&\n      api?.query?.[pallets.PROFILE]?.[profileCallables.PROFILES]\n    ) {\n      const query = async () => {\n        const unsub = await api.query[pallets.PROFILE][\n          profileCallables.PROFILES\n        ](selectedKeyring.value, queryResponseHandler);\n        const cb = () => unsub;\n        cb();\n      };\n\n      query();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    api?.query?.[pallets.PROFILE]?.[profileCallables.PROFILES],\n    selectedKeyring.value,\n    setStatusMessage,\n    setLoading,\n  ]);\n\n  const signedTransaction = async actionType => {\n    const accountPair =\n      selectedKeyring.value &&\n      keyringState === 'READY' &&\n      keyring.getPair(selectedKeyring.value);\n\n    const getFromAcct = async () => {\n      const {\n        address,\n        meta: { source, isInjected },\n      } = accountPair;\n      let fromAcct;\n\n      // signer is from Polkadot-js browser extension\n      if (isInjected) {\n        const injected = await web3FromSource(source);\n        fromAcct = address;\n        api.setSigner(injected.signer);\n      } else {\n        fromAcct = accountPair;\n      }\n\n      return fromAcct;\n    };\n\n    const transactionResponseHandler = ({ status }) => {\n      const callStatus = status;\n\n      if (callStatus?.isFinalized) {\n        setStatus(statusTypes.FINALIZED);\n        setTimeout(() => {\n          setStatus('');\n        }, [5000]);\n      }\n      if (callStatus?.isInBlock) {\n        setStatus(statusTypes.IN_BLOCK);\n      }\n\n      if (callStatus?.isInBlock) {\n        if (actionType === profileCallables.CREATE_PROFILE) {\n          toast('Profile created successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === profileCallables.UPDATE_PROFILE) {\n          toast('Profile updated successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === profileCallables.REMOVE_PROFILE) {\n          toast('Profile deleted successfully.', toastTypes.SUCCESS);\n        }\n      }\n\n      setActionLoading(false);\n    };\n\n    const transactionErrorHandler = err => {\n      setStatus(statusTypes.ERROR);\n      setStatusMessage(err.toString());\n    };\n\n    const fromAcct = await getFromAcct();\n\n    // TODO: verify if correct;\n    const paramFieldsForTransformed = () => [\n      { name: 'username', optional: false, type: 'Bytes' },\n      { name: 'interests', optional: false, type: 'Bytes' },\n    ];\n    const inputParamsForTransformed = () => [\n      { type: 'Bytes', value: username },\n      { type: 'Bytes', value: interests.join() },\n    ];\n\n    const transformed = transformParams(\n      paramFieldsForTransformed(),\n      inputParamsForTransformed()\n    );\n\n    let txExecute;\n\n    if (actionType === profileCallables.CREATE_PROFILE) {\n      txExecute = api.tx[pallets.PROFILE][profileCallables.CREATE_PROFILE](\n        ...transformed\n      );\n    }\n\n    if (actionType === profileCallables.REMOVE_PROFILE) {\n      txExecute = api.tx[pallets.PROFILE][profileCallables.REMOVE_PROFILE]();\n    }\n\n    if (actionType === profileCallables.UPDATE_PROFILE) {\n      txExecute = api.tx[pallets.PROFILE][profileCallables.UPDATE_PROFILE](\n        ...transformed\n      );\n    }\n\n    const unsub = await txExecute\n      .signAndSend(fromAcct, transactionResponseHandler)\n      .catch(transactionErrorHandler);\n\n    setUnsub(() => unsub);\n  };\n\n  const profileAction = async actionType => {\n    if (typeof unsub === 'function') {\n      unsub();\n      setUnsub(null);\n    }\n\n    if (actionType === profileCallables.CREATE_PROFILE) {\n      toast('Creating profile...', toastTypes.INFO);\n    }\n\n    if (actionType === profileCallables.UPDATE_PROFILE) {\n      toast('Updating profile...', toastTypes.INFO);\n    }\n\n    if (actionType === profileCallables.REMOVE_PROFILE) {\n      toast('Deleting profile...', toastTypes.INFO);\n    }\n\n    setStatus(statusTypes.INIT);\n    setActionLoading(true);\n    populateFormInterests([]);\n    setUsername('');\n    signedTransaction(actionType);\n  };\n\n  return {\n    getProfile,\n    profileData,\n    populateFormInterests,\n    interests,\n    profileAction,\n    actionLoading,\n    setActionLoading,\n    setUsername,\n    username,\n    reputation,\n  };\n};\n\nexport { useProfile };\n","import utils from '../substrate-lib/utils';\n\nconst useUtils = () => {\n  const transformParams = (\n    paramFields,\n    inputParams,\n    opts = { emptyAsNull: true }\n  ) => {\n    const isNumType = type =>\n      utils.paramConversion.num.some(el => type.indexOf(el) >= 0);\n    // if `opts.emptyAsNull` is true, empty param value will be added to res as `null`.\n    //   Otherwise, it will not be added\n    const paramVal = inputParams.map(inputParam => {\n      // To cater the js quirk that `null` is a type of `object`.\n      if (\n        typeof inputParam === 'object' &&\n        inputParam !== null &&\n        typeof inputParam.value === 'string'\n      ) {\n        return inputParam.value.trim();\n      } else if (typeof inputParam === 'string') {\n        return inputParam.trim();\n      }\n      return inputParam;\n    });\n    const params = paramFields.map((field, ind) => ({\n      ...field,\n      value: paramVal[ind] || null,\n    }));\n\n    return params.reduce((memo, { type = 'string', value }) => {\n      if (value == null || value === '') {\n        return opts.emptyAsNull ? [...memo, null] : memo;\n      }\n\n      let converted = value;\n\n      // Deal with a vector\n      if (type.indexOf('Vec<') >= 0) {\n        converted = converted.split(',').map(e => e.trim());\n        converted = converted.map(single =>\n          isNumType(type)\n            ? single.indexOf('.') >= 0\n              ? Number.parseFloat(single)\n              : Number.parseInt(single)\n            : single\n        );\n        return [...memo, converted];\n      }\n\n      // Deal with a single value\n      if (isNumType(type)) {\n        converted =\n          converted.indexOf('.') >= 0\n            ? Number.parseFloat(converted)\n            : Number.parseInt(converted);\n      }\n      return [...memo, converted];\n    }, []);\n  };\n\n  return {\n    transformParams,\n  };\n};\n\nexport { useUtils };\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  tasks: [],\n  task: {\n    title: '',\n    specification: '',\n    budget: '',\n    deadline: '',\n  },\n  isEditMode: false,\n};\n\nconst tasksSlice = createSlice({\n  name: 'tasks',\n  initialState,\n  reducers: {\n    setTasks(state, action) {\n      state.tasks = action.payload;\n    },\n    resetTasks(state) {\n      state.tasks = [];\n    },\n    setTaskTitle(state, action) {\n      state.task.title = action.payload;\n    },\n    setTaskSpecification(state, action) {\n      state.task.specification = action.payload;\n    },\n    setTaskBudget(state, action) {\n      state.task.budget = action.payload;\n    },\n    setTaskDeadline(state, action) {\n      state.task.deadline = action.payload;\n    },\n    setTaskIsEditMode(state, action) {\n      state.isEditMode = action.payload;\n    },\n    resetTask(state) {\n      state.task = {\n        ...initialState.task,\n      };\n    },\n  },\n});\n\nexport const {\n  setTasks,\n  setTaskTitle,\n  setTaskSpecification,\n  setTaskBudget,\n  setTaskDeadline,\n  setTaskIsEditMode,\n  resetTask,\n  resetTasks,\n} = tasksSlice.actions;\n\nexport default tasksSlice.reducer;\n","/* eslint-disable indent */\nimport { useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { web3FromSource } from '@polkadot/extension-dapp';\nimport { useSubstrate } from '../substrate-lib';\nimport {\n  setTasks,\n  setTaskTitle,\n  setTaskSpecification,\n  setTaskBudget,\n  setTaskDeadline,\n  resetTask,\n  resetTasks,\n  // setTaskIsEditMode,\n} from '../store/slices/tasksSlice';\nimport { useUser } from './useUser';\nimport { useStatus } from './useStatus';\nimport { useLoader } from './useLoader';\nimport {\n  statusTypes,\n  pallets,\n  taskCallables,\n  toastTypes,\n  loadingTypes,\n} from '../types';\nimport { useToast } from './useToast';\n\nconst useTasks = () => {\n  const dispatch = useDispatch();\n  const { api, keyring, keyringState } = useSubstrate();\n  const [unsub, setUnsub] = useState(null);\n  const [actionLoading, setActionLoading] = useState(false);\n\n  const { selectedKeyring } = useUser();\n  const { setStatus, setStatusMessage } = useStatus();\n  const { setLoading } = useLoader();\n  const { toast } = useToast();\n\n  // TODO: reformat it to be DRY;\n  const taskValues = useSelector(state => state.tasks.task);\n  const isEditMode = useSelector(state => state.tasks.isEditMode);\n  const tasks = useSelector(state => state.tasks.tasks);\n\n  const resetAllTasks = useCallback(() => dispatch(resetTasks()), [dispatch]);\n\n  const populateTask = useCallback(\n    ({ key, value }) => {\n      if (key === 'title') {\n        dispatch(setTaskTitle(value));\n      }\n      if (key === 'specification') {\n        dispatch(setTaskSpecification(value));\n      }\n      if (key === 'budget') {\n        dispatch(setTaskBudget(value));\n      }\n      if (key === 'deadline') {\n        dispatch(setTaskDeadline(value));\n      }\n    },\n    [dispatch]\n  );\n\n  const getTask = useCallback(\n    (taskId, responseHandler) => {\n      const query = async () => {\n        const unsub = await api?.query[pallets.TASK][taskCallables.GET_TASK](\n          taskId,\n          responseHandler\n        );\n        const cb = () => unsub;\n        cb();\n      };\n\n      query();\n    },\n    [api]\n  );\n\n  // const getTaskToEdit = useCallback(\n  //   taskId => {\n  //     const queryResHandler = result => {\n  //       if (!result.isNone) {\n  //         dispatch(setTaskIsEditMode(true));\n  //         dispatch(setTaskSpecification(result.toHuman().specification));\n  //         dispatch(setTaskBudget(result.toHuman().budget));\n  //         dispatch(setTaskDeadline(result.toHuman().deadline));\n  //       }\n  //     };\n\n  //     const query = async () => {\n  //       const unsub = await api?.query[pallets.TASK][taskCallables.GET_TASK](\n  //         taskId,\n  //         queryResHandler\n  //       );\n  //       const cb = () => unsub;\n  //       cb();\n  //     };\n\n  //     query();\n  //   },\n  //   [api, dispatch]\n  // );\n\n  const queryResponseHandler = useCallback(\n    result => {\n      setLoading({ type: loadingTypes.TASKS, value: false });\n      setStatusMessage('');\n\n      if (result.isNone) {\n        dispatch(setTasks([]));\n      }\n\n      dispatch(setTasks(result.toHuman()));\n    },\n    [dispatch, setLoading, setStatusMessage]\n  );\n\n  const getAllTasks = useCallback(() => {\n    setLoading({ type: loadingTypes.TASKS, value: true });\n    setStatusMessage('Loading tasks...');\n    if (selectedKeyring.value) {\n      const query = async () => {\n        const unsub = await api.query[pallets.TASK][taskCallables.TASKS_OWNED](\n          selectedKeyring.value,\n          queryResponseHandler\n        );\n        const cb = () => unsub;\n        cb();\n      };\n\n      query();\n    }\n  }, [\n    selectedKeyring.value,\n    api,\n    queryResponseHandler,\n    setLoading,\n    setStatusMessage,\n  ]);\n\n  const signedTx = async (actionType, taskPayload) => {\n    const accountPair =\n      selectedKeyring.value &&\n      keyringState === 'READY' &&\n      keyring.getPair(selectedKeyring.value);\n\n    const getFromAcct = async () => {\n      const {\n        address,\n        meta: { source, isInjected },\n      } = accountPair;\n      let fromAcct;\n\n      // signer is from Polkadot-js browser extension\n      if (isInjected) {\n        const injected = await web3FromSource(source);\n        fromAcct = address;\n        api.setSigner(injected.signer);\n      } else {\n        fromAcct = accountPair;\n      }\n\n      return fromAcct;\n    };\n\n    const fromAcct = await getFromAcct();\n\n    const transformedPayloadForCreate = [\n      taskPayload?.title || '',\n      taskPayload?.specification || '',\n      taskPayload?.budget || '',\n      taskPayload?.deadline || '',\n    ];\n\n    const transformedPayloadForStartCompleteRemove = [taskPayload];\n\n    let txExecute;\n\n    if (actionType === taskCallables.CREATE_TASK) {\n      txExecute = api.tx[pallets.TASK][actionType](\n        ...transformedPayloadForCreate\n      );\n    }\n\n    if (actionType === taskCallables.START_TASK) {\n      txExecute = api.tx[pallets.TASK][taskCallables.START_TASK](\n        ...transformedPayloadForStartCompleteRemove\n      );\n    }\n\n    if (actionType === taskCallables.COMPLETE_TASK) {\n      txExecute = api.tx[pallets.TASK][taskCallables.COMPLETE_TASK](\n        ...transformedPayloadForStartCompleteRemove\n      );\n    }\n\n    if (actionType === taskCallables.REMOVE_TASK) {\n      txExecute = api.tx[pallets.TASK][taskCallables.REMOVE_TASK](\n        ...transformedPayloadForStartCompleteRemove\n      );\n    }\n\n    const transactionResponseHandler = ({ status }) => {\n      const callStatus = status;\n\n      if (callStatus?.isFinalized) {\n        getAllTasks();\n      }\n\n      if (callStatus?.isFinalized) {\n        setStatus(statusTypes.FINALIZED);\n        setTimeout(() => {\n          setStatus('');\n        }, [5000]);\n      }\n      if (callStatus?.isInBlock) {\n        setStatus(statusTypes.IN_BLOCK);\n      }\n\n      if (callStatus?.isInBlock) {\n        if (actionType === taskCallables.CREATE_TASK) {\n          toast('Task created successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === taskCallables.START_TASK) {\n          toast('Task started successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === taskCallables.COMPLETE_TASK) {\n          toast('Task closed successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === taskCallables.REMOVE_TASK) {\n          toast('Task deleted successfully!', toastTypes.SUCCESS);\n        }\n      }\n\n      setActionLoading(false);\n    };\n\n    const transactionErrorHandler = err => {\n      setStatus(statusTypes.ERROR);\n      setStatusMessage(err.toString());\n    };\n\n    const unsub = await txExecute\n      .signAndSend(fromAcct, transactionResponseHandler)\n      .catch(transactionErrorHandler);\n\n    setUnsub(() => unsub);\n  };\n\n  const taskAction = async (actionType, taskPayload) => {\n    if (typeof unsub === 'function') {\n      unsub();\n      setUnsub(null);\n    }\n\n    setStatus(statusTypes.INIT);\n\n    if (actionType === taskCallables.CREATE_TASK) {\n      toast('Creating task...', toastTypes.INFO);\n    }\n\n    if (actionType === taskCallables.START_TASK) {\n      toast('Initiating task...', toastTypes.INFO);\n    }\n\n    if (actionType === taskCallables.COMPLETE_TASK) {\n      toast('Closing task...', toastTypes.INFO);\n    }\n\n    if (actionType === taskCallables.REMOVE_TASK) {\n      toast('Deleting task...', toastTypes.INFO);\n    }\n\n    setActionLoading(true);\n\n    signedTx(actionType, taskPayload);\n    dispatch(resetTask());\n  };\n\n  return {\n    getTask,\n    taskAction,\n    actionLoading,\n    populateTask,\n    taskValues,\n    isEditMode,\n    getAllTasks,\n    tasks,\n    resetAllTasks,\n  };\n};\n\nexport { useTasks };\n","import React, { useEffect } from 'react';\nimport {\n  Image,\n  Sticky,\n  Menu,\n  Button,\n  Icon,\n  Search,\n  Dropdown,\n} from 'semantic-ui-react';\nimport { useLocation, Link } from 'react-router-dom';\nimport { useUser, useGeneral } from '../../hooks';\nimport styles from './Header.module.scss';\nimport { useSubstrate } from '../../substrate-lib';\n\nconst Header = () => {\n  const location = useLocation();\n  const { keyring } = useSubstrate();\n\n  const {\n    setKeyringOptions,\n    keyringOptions,\n    setSelectedKeyring,\n    selectedKeyring,\n  } = useUser();\n  const { sidebarWidth } = useGeneral();\n\n  const activePage = () => {\n    const current = location.pathname.split('/')[1];\n    const capitalized = current.charAt(0).toUpperCase() + current.slice(1);\n\n    let icon;\n    switch (current) {\n      case 'profile':\n        icon = 'block layout';\n        break;\n      case 'dashboard':\n        icon = 'briefcase';\n        break;\n      case 'organization':\n        icon = 'clipboard list';\n        break;\n      case 'calendar':\n        icon = 'calendar alternate outline';\n        break;\n      default:\n        icon = '';\n    }\n\n    return (\n      <div style={{ display: 'flex' }}>\n        <Icon name={icon} />\n        <span style={{ marginLeft: '0.85rem', fontWeight: 'bold' }}>\n          {capitalized}\n        </span>\n      </div>\n    );\n  };\n\n  const AccountDropdown = () => {\n    const trigger = (\n      <>\n        <Image\n          avatar\n          spaced=\"right\"\n          src=\"https://react.semantic-ui.com/images/avatar/small/matthew.png\"\n        />\n      </>\n    );\n\n    return (\n      <Dropdown trigger={trigger}>\n        <Dropdown.Menu style={{ top: '48px' }}>\n          <Dropdown.Item\n            disabled\n            text={\n              <span>\n                Signed in as <strong>{selectedKeyring.text}</strong>\n              </span>\n            }\n          />\n          <Dropdown.Divider />\n\n          <Dropdown.Item text=\"Your Profile\" as={Link} to=\"profile/configure\" />\n          <Dropdown.Item text=\"Help\" />\n          <Dropdown.Item icon=\"setting\" text=\"Settings\" />\n          <Dropdown.Divider />\n          <Dropdown.Item icon=\"log out\" text=\"Log Out\" />\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n\n  useEffect(() => {\n    // Get the list of accounts we possess the private key for.\n    if (keyring) {\n      const keyringOptions = keyring?.getPairs()?.map(account => ({\n        key: account.address,\n        value: account.address,\n        text: account.meta.name.toUpperCase(),\n      }));\n      setKeyringOptions(keyringOptions);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [keyring]);\n\n  return (\n    <Sticky className={styles.header}>\n      <div className={styles.contentContainer}>\n        <div\n          className={styles.logoContainer}\n          style={{\n            width: `${sidebarWidth}px`,\n          }}\n        >\n          <Image\n            src={`${process.env.PUBLIC_URL}/assets/UniversalDotLogoText.png`}\n            style={{ width: '112px' }}\n          />\n        </div>\n        <div\n          className={styles.mainContent}\n          style={{\n            width: `calc(100% - ${sidebarWidth}px)`,\n            // paddingRight = px of minWidth of activyPage item + sidebar\n            paddingRight: `${sidebarWidth + sidebarWidth}px`,\n          }}\n        >\n          <Menu className={styles.menu}>\n            <Menu.Menu>\n              <Menu.Item\n                className={styles.menuItem_activePage}\n                as={'span'}\n                style={{ minWidth: `${sidebarWidth}px` }}\n              >\n                {activePage()}\n              </Menu.Item>\n            </Menu.Menu>\n            <Menu.Menu>\n              <Menu.Item style={{ minWidth: '0' }} as={Button}>\n                <Search />\n              </Menu.Item>\n              <Menu.Item style={{ minWidth: '0' }} as={Button}>\n                <Icon name=\"bell outline\" />\n              </Menu.Item>\n              <Menu.Item style={{ minWidth: '0' }} as={Button}>\n                <Icon name=\"setting\" />\n              </Menu.Item>\n              <Menu.Item style={{ minWidth: '0' }} as={Button}>\n                <Icon name=\"folder outline\" />\n              </Menu.Item>\n              <Menu.Item style={{ minWidth: '0' }}>\n                <Dropdown\n                  placeholder=\"Select an account\"\n                  selection\n                  options={keyringOptions || []}\n                  onChange={(_, otherData) => {\n                    setSelectedKeyring({\n                      key: otherData.value,\n                      value: otherData.value,\n                      text: keyringOptions.find(\n                        option => option.key === otherData.value\n                      ).text,\n                    });\n                  }}\n                  value={selectedKeyring.value || ''}\n                />\n              </Menu.Item>\n              <Menu.Item style={{ minWidth: '0' }} as={Button}>\n                <AccountDropdown />\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n        </div>\n      </div>\n    </Sticky>\n  );\n};\n\nHeader.displayName = 'Header';\n\nexport { Header };\n","import React, { useEffect, useState } from 'react';\nimport { Icon, Menu, Sidebar, Container } from 'semantic-ui-react';\nimport { Link, Outlet, useLocation, useNavigate } from 'react-router-dom';\nimport styles from './SidebarComponent.module.scss';\nimport { useGeneral } from '../../hooks';\n\nconst SidebarComponent = () => {\n  const [expOrg, setExpOrg] = useState(false);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const { sidebarWidth } = useGeneral();\n\n  useEffect(() => {\n    if (location.pathname === '/') {\n      navigate('/profile');\n    }\n  }, [location, navigate]);\n\n  const toggleExpandedMenuItem = () => {\n    setExpOrg(!expOrg);\n  };\n\n  return (\n    <Sidebar.Pushable\n      className={styles.sidebarComponent}\n      style={{ height: 'calc(100vh - 68px)' }}\n    >\n      <Sidebar\n        as={Menu}\n        animation=\"push\"\n        icon=\"labeled\"\n        // onHide={() => setSidebarSize('very thin')}\n        vertical\n        visible\n        // width={sidebarWidth}\n        className={styles.sidebar}\n        style={{ width: `${sidebarWidth}px` }}\n      >\n        <Menu.Item\n          as={Link}\n          to=\"/profile\"\n          active={location.pathname.split('/').includes('profile')}\n          className={styles.menuItem_first}\n        >\n          <div className={styles.menuItem_content}>\n            <Icon name=\"block layout\" />\n            <span className={styles.menuItem_content_text}>Profile</span>\n          </div>\n        </Menu.Item>\n        <Menu.Item\n          as={Link}\n          to=\"/dashboard\"\n          active={location.pathname === '/dashboard'}\n        >\n          <div className={styles.menuItem_content}>\n            <Icon name=\"briefcase\" />\n            <span className={styles.menuItem_content_text}>Dashboard</span>\n          </div>\n        </Menu.Item>\n        {/* <Menu.Item\n          as={Link}\n          to=\"/tasks\"\n          active={location.pathname === '/tasks'}\n        >\n          <div className={styles.menuItem_content}>\n            <Icon name=\"tasks\" />\n            <span className={styles.menuItem_content_text}>Tasks</span>\n            <Icon style={{ marginLeft: '0.85rem' }} name=\"caret down\" />\n          </div>\n        </Menu.Item> */}\n        {/* {location.pathname.includes('/tasks') && (\n          <Menu.Item\n            style={{ minWidth: '0', paddingLeft: '2rem' }}\n            as={Link}\n            to=\"/tasks/developing\"\n            active={location.pathname === '/tasks/developing'}\n          >\n            <div style={{ display: 'flex' }}>\n              <Icon name=\"tasks\" />\n              <span style={{ marginLeft: '0.85rem' }}>Developing</span>\n            </div>\n          </Menu.Item>\n        )}\n        {location.pathname.includes('/tasks') && (\n          <Menu.Item\n            style={{ minWidth: '0', paddingLeft: '2rem' }}\n            as={Link}\n            to=\"/tasks/designing\"\n            active={location.pathname === '/tasks/designing'}\n          >\n            <div style={{ display: 'flex' }}>\n              <Icon name=\"tasks\" />\n              <span style={{ marginLeft: '0.85rem' }}>Designing</span>\n            </div>\n          </Menu.Item>\n        )} */}\n        {/* <Menu.Item\n          as={Link}\n          to=\"/organization\"\n          active={location.pathname === '/organization'}\n        >\n          <div className={styles.menuItem_content}>\n            <Icon name=\"clipboard list\" />\n            <span className={styles.menuItem_content_text}>Organization</span>\n          </div>\n        </Menu.Item> */}\n        <Menu.Item as={Menu.Item} onClick={toggleExpandedMenuItem}>\n          <div className={styles.menuItem_content}>\n            <Icon name=\"clipboard list\" />\n            <span className={styles.menuItem_content_text}>Organization</span>\n            <Icon style={{ marginLeft: '0.85rem' }} name=\"caret down\" />\n          </div>\n        </Menu.Item>\n        {expOrg && (\n          <Menu.Item\n            style={{ minWidth: '0', paddingLeft: '2rem' }}\n            as={Link}\n            to=\"/organization/joined\"\n            active={location.pathname === '/organization/joined'}\n          >\n            <div\n              style={{ display: 'flex' }}\n              className={styles.menuItem_nested_content}\n            >\n              <Icon name=\"clipboard list\" />\n              <span style={{ marginLeft: '0.85rem' }}>Joined organization</span>\n            </div>\n          </Menu.Item>\n        )}\n        {expOrg && (\n          <Menu.Item\n            style={{ minWidth: '0', paddingLeft: '2rem' }}\n            as={Link}\n            to=\"/organization/own\"\n            active={location.pathname === '/organization/own'}\n          >\n            <div\n              style={{ display: 'flex' }}\n              className={styles.menuItem_nested_content}\n            >\n              <Icon name=\"clipboard list\" />\n              <span style={{ marginLeft: '0.85rem' }}>Own organization</span>\n            </div>\n          </Menu.Item>\n        )}\n        {expOrg && (\n          <Menu.Item\n            style={{ minWidth: '0', paddingLeft: '2rem' }}\n            as={Link}\n            to=\"/organization/kanban\"\n            active={location.pathname === '/organization/kanban'}\n          >\n            <div\n              style={{ display: 'flex' }}\n              className={styles.menuItem_nested_content}\n            >\n              <Icon name=\"clipboard list\" />\n              <span style={{ marginLeft: '0.85rem' }}>DAO Kanban</span>\n            </div>\n          </Menu.Item>\n        )}\n        <Menu.Item\n          as={Link}\n          to=\"/calendar\"\n          active={location.pathname === '/calendar'}\n        >\n          <div className={styles.menuItem_content}>\n            <Icon name=\"calendar alternate outline\" />\n            <span className={styles.menuItem_content_text}>Calendar</span>\n          </div>\n        </Menu.Item>\n      </Sidebar>\n\n      <Sidebar.Pusher\n        style={{\n          width: `calc(100% - ${sidebarWidth}px)`,\n          height: '100%',\n          overflowY: 'auto',\n          transform: `translate3d(${sidebarWidth}px,0,0)`,\n        }}\n        className={styles.sidebarContent}\n      >\n        <Container fluid className={styles.contentContainer}>\n          <Outlet />\n        </Container>\n      </Sidebar.Pusher>\n    </Sidebar.Pushable>\n  );\n};\n\nSidebarComponent.displayName = 'SidebarComponent';\n\nexport { SidebarComponent };\n","import React from 'react';\nimport { SidebarComponent } from '../../components';\n\nconst Layout = () => {\n  return (\n    <>\n      <SidebarComponent />\n    </>\n  );\n};\n\nLayout.displayName = 'Layout';\n\nexport { Layout };\n","import React from 'react';\nimport { Card, Image, Icon } from 'semantic-ui-react';\nimport styles from './UserQuickInfo.module.scss';\nimport { useUser } from '../../hooks';\n\nconst UserQuickInfo = () => {\n  const { selectedKeyring } = useUser();\n\n  return (\n    <Card fluid raised className={styles.card}>\n      <Card.Content className={styles.contentContainer}>\n        <div className={styles.user}>\n          <Image\n            className={styles.image}\n            size=\"tiny\"\n            src=\"https://react.semantic-ui.com/images/avatar/small/matthew.png\"\n            circular\n          />\n          <Card.Header className={styles.name}>\n            {selectedKeyring.text}\n          </Card.Header>\n        </div>\n        <div className={styles.divider}></div>\n        <div className={styles.role}>UX Designer at Designer Hub</div>\n        <div className={styles.log}>\n          <Icon name=\"stopwatch\" className={styles.icon} />\n          <div className={styles.info}>\n            <div>8.00 hrs</div>\n            <div>This week</div>\n          </div>\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nUserQuickInfo.displayName = 'UserQuickInfo';\n\nexport { UserQuickInfo };\n","import React, { useEffect } from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport styles from './Funds.module.scss';\nimport { useUser, useProfile } from '../../hooks';\nimport { useSubstrate } from '../../substrate-lib';\nimport { useDispatch } from 'react-redux';\nimport { setBalance } from '../../store/slices/accountSlice';\n\nconst Funds = () => {\n  const { selectedKeyring, selectedAccountBalance } = useUser();\n  const { reputation } = useProfile();\n  const { api } = useSubstrate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    let unsubscribe;\n\n    if (selectedKeyring.value && api) {\n      selectedKeyring.value &&\n        api?.query?.system\n          ?.account(selectedKeyring.value, balance => {\n            dispatch(setBalance(balance.data.free.toHuman()));\n          })\n          .then(unsub => {\n            unsubscribe = unsub;\n          })\n          .catch(console.error);\n    }\n\n    return () => unsubscribe && unsubscribe();\n  }, [selectedKeyring.value, dispatch, api]);\n\n  return (\n    <Grid className={styles.grid}>\n      <Grid.Row className={styles.row}>\n        <Grid.Column\n          className={styles.column}\n          mobile={16}\n          tablet={16}\n          computer={8}\n        >\n          <Card fluid raised color=\"purple\" className={styles.card}>\n            <Card.Content className={styles.contentContainer}>\n              <div className={styles.header}>\n                <span className={styles.text}>Reputation</span>\n                <Button basic className={styles.button}>\n                  Details\n                </Button>\n              </div>\n              <Card.Description className={styles.description}>\n                Points: {reputation}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        </Grid.Column>\n        <Grid.Column\n          className={styles.column}\n          mobile={16}\n          tablet={16}\n          computer={8}\n        >\n          <Card fluid raised color=\"pink\" className={styles.card}>\n            <Card.Content className={styles.contentContainer}>\n              <div className={styles.header}>\n                <span className={styles.text}>Cryptocurrency</span>\n                <Button basic className={styles.button}>\n                  Details\n                </Button>\n              </div>\n              <Card.Description className={styles.description}>\n                ₿{selectedAccountBalance}\n              </Card.Description>\n            </Card.Content>\n          </Card>\n        </Grid.Column>\n      </Grid.Row>\n    </Grid>\n  );\n};\n\nFunds.displayName = 'Funds';\n\nexport { Funds };\n","/* eslint-disable indent */\nimport React, { useState, useEffect } from 'react';\nimport {\n  Card,\n  Label,\n  Input,\n  Button,\n  Icon,\n  Message,\n  Breadcrumb,\n  Grid,\n  Placeholder,\n} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport styles from './ProfileConfiguration.module.scss';\nimport { useProfile, useStatus } from '../../hooks';\nimport { PageContainer } from '../';\nimport { profileCallables, statusTypes } from '../../types';\n\nconst ProfileConfiguration = () => {\n  const [oneInterest, setOneInterest] = useState('');\n  const [showLoader, setShowLoader] = useState(false);\n  const [usernameEditEnabled, setUsernameEditEnabled] = useState(false);\n\n  const {\n    profileData,\n    profileAction,\n    populateFormInterests,\n    interests,\n    actionLoading,\n    setUsername,\n    username,\n  } = useProfile();\n  const { status, setStatus } = useStatus();\n\n  const onPalletCallableParamChange = e => {\n    setOneInterest(e.target.value);\n  };\n\n  useEffect(() => {\n    if (!profileData) {\n      populateFormInterests([]);\n      setUsername('');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [profileData]);\n\n  useEffect(() => {\n    if (!!status && status === statusTypes.INIT) {\n      setShowLoader(true);\n    }\n\n    if (!!status && status === statusTypes.IN_BLOCK) {\n      setShowLoader(false);\n      setTimeout(() => {\n        setStatus('');\n      }, 5000);\n    }\n  }, [status, setStatus]);\n\n  const TxButton = ({ label, color = 'blue', actionType, loading }) => {\n    return (\n      <Button\n        color={color}\n        type=\"submit\"\n        onClick={() => {\n          profileAction(actionType);\n          setOneInterest('');\n        }}\n        loading={loading}\n        disabled={showLoader}\n      >\n        {label}\n      </Button>\n    );\n  };\n\n  const handleAddInterest = () => {\n    if (oneInterest.length > 3) {\n      populateFormInterests([...interests, oneInterest]);\n      setOneInterest('');\n    }\n  };\n\n  const onEnter = e => {\n    if (e.keyCode === 13 && oneInterest.length > 3) {\n      populateFormInterests([...interests, oneInterest]);\n      setOneInterest('');\n    }\n  };\n\n  const handleRemoveInterest = interest => {\n    populateFormInterests(\n      interests.filter(interestItem => interestItem !== interest)\n    );\n  };\n\n  return (\n    <>\n      {/* <Breadcrumb size=\"big\" className={styles.breadcrumb}>\n        <Breadcrumb.Section link as={Link} to=\"/profile\">\n          Profile\n        </Breadcrumb.Section>\n        <Breadcrumb.Divider icon=\"right chevron\" />\n        <Breadcrumb.Section active>Profile configuration</Breadcrumb.Section>\n      </Breadcrumb> */}\n      <Card fluid raised className={styles.card}>\n        {!showLoader && (\n          <Card.Content\n            header={profileData ? 'Your profile' : 'Create your profile'}\n          />\n        )}\n        {showLoader && (\n          <Card.Content>\n            <Placeholder>\n              <Placeholder.Header>\n                <Placeholder.Line />\n              </Placeholder.Header>\n            </Placeholder>\n          </Card.Content>\n        )}\n        {!showLoader && (\n          <Card.Content\n            description={\n              profileData\n                ? 'You can update or remove your profile in this panel'\n                : 'To create your profile add some interests first.'\n            }\n          />\n        )}\n        {showLoader && (\n          <Card.Content>\n            <Placeholder>\n              <Placeholder.Header>\n                <Placeholder.Line />\n              </Placeholder.Header>\n            </Placeholder>\n          </Card.Content>\n        )}\n        {!showLoader && (\n          <Card.Content className={styles.body}>\n            {/* <Search className={styles.search} /> */}\n            <Grid className={styles.gridContainer}>\n              <Grid.Row>\n                <Grid.Column mobile={16} tablet={16} computer={8}>\n                  {!profileData && (\n                    <Input\n                      placeholder=\"For ex. richard123\"\n                      fluid\n                      type=\"text\"\n                      label=\"Enter your username:\"\n                      value={username}\n                      onChange={e => setUsername(e.target.value)}\n                    />\n                  )}\n                  {profileData && (\n                    <Input\n                      placeholder=\"For ex. richard123\"\n                      action={{\n                        icon: 'edit',\n                        onClick: () => setUsernameEditEnabled(true),\n                      }}\n                      fluid\n                      type=\"text\"\n                      label=\"Your username:\"\n                      value={username}\n                      onChange={e => setUsername(e.target.value)}\n                      readOnly={!usernameEditEnabled}\n                    />\n                  )}\n                </Grid.Column>\n              </Grid.Row>\n              <Grid.Row>\n                <Grid.Column mobile={16} tablet={16} computer={8}>\n                  <Input\n                    placeholder=\"For ex. Web Development\"\n                    action={{\n                      icon: 'plus',\n                      onClick: handleAddInterest,\n                    }}\n                    fluid\n                    type=\"text\"\n                    label=\"Add an interest:\"\n                    value={oneInterest}\n                    onChange={e => onPalletCallableParamChange(e)}\n                    onKeyDown={onEnter}\n                  />\n                </Grid.Column>\n              </Grid.Row>\n            </Grid>\n\n            <Grid className={styles.gridContainer}>\n              <Grid.Column mobile={16} tablet={16} computer={8}>\n                <Card fluid>\n                  <Card.Content header=\"Your interests\" />\n                  <Card.Content>\n                    <div className={styles.pills}>\n                      <div className={styles.selected}>\n                        {interests.map((interest, i) => (\n                          <Label\n                            basic\n                            color=\"blue\"\n                            style={{ margin: '0.5rem 0.5rem 0.5rem 0' }}\n                            key={`${interest}+${i}`}\n                          >\n                            {interest}\n                            <Icon\n                              name=\"delete\"\n                              onClick={() => handleRemoveInterest(interest)}\n                            />\n                          </Label>\n                        ))}\n                        {!profileData && interests.length === 0 && (\n                          <span>Your added interests will show up here...</span>\n                        )}\n                      </div>\n                    </div>\n                  </Card.Content>\n                </Card>\n              </Grid.Column>\n            </Grid>\n          </Card.Content>\n        )}\n        {showLoader && (\n          <Card.Content>\n            <Placeholder>\n              <Placeholder.Header>\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n                <Placeholder.Line />\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Card.Content>\n        )}\n        {!showLoader && (\n          <Card.Content extra>\n            <TxButton\n              label={profileData ? 'Update profile' : 'Create profile'}\n              color={profileData ? 'green' : 'blue'}\n              actionType={\n                profileData\n                  ? profileCallables.UPDATE_PROFILE\n                  : profileCallables.CREATE_PROFILE\n              }\n              loading={actionLoading}\n            />\n            {profileData && (\n              <TxButton\n                label=\"Remove profile\"\n                color=\"red\"\n                actionType={profileCallables.REMOVE_PROFILE}\n              />\n            )}\n          </Card.Content>\n        )}\n        {showLoader && (\n          <Card.Content extra>\n            <Placeholder>\n              <Placeholder.Header>\n                <Placeholder.Line />\n              </Placeholder.Header>\n            </Placeholder>\n          </Card.Content>\n        )}\n      </Card>\n      {/* {status && (\n        <Message positive={!showLoader} warning={showLoader} icon>\n          {showLoader && <Icon name=\"circle notched\" loading />}\n          {!showLoader && <Icon name=\"check\" />}\n          <Message.Content>\n            <Message.Header>Profile status</Message.Header>\n            {status}\n          </Message.Content>\n        </Message>\n      )} */}\n    </>\n  );\n};\n\nProfileConfiguration.displayName = 'ProfileConfiguration';\n\nexport { ProfileConfiguration };\n","/* eslint-disable multiline-ternary */\nimport React, { useEffect, useMemo } from 'react';\nimport { Grid, Icon, Label } from 'semantic-ui-react';\nimport styles from './Timeline.module.scss';\nimport { Task, Project, Log, Events, LoaderGeneric } from '../';\nimport { useTasks, useLoader } from '../../hooks';\n\nconst Timeline = () => {\n  const {\n    getAllTasks,\n    tasks: allTasksReceived,\n    resetAllTasks,\n    taskAction,\n    actionLoading,\n  } = useTasks();\n\n  const { loadingTasks } = useLoader();\n\n  useEffect(() => {\n    if (!actionLoading) {\n      getAllTasks();\n    }\n    return () => resetAllTasks();\n  }, [actionLoading, getAllTasks, resetAllTasks]);\n\n  const tasks = useMemo(() => {\n    const handleOptionsOnClick = (actionType, taskId) => {\n      taskAction(actionType, taskId);\n    };\n\n    if (allTasksReceived.length === 0) {\n      return <div className={styles.noTasks}>No tasks at the moment...</div>;\n    }\n\n    return allTasksReceived.map((taskId, i) => {\n      return (\n        <Task\n          id={taskId}\n          optionsOnClick={handleOptionsOnClick}\n          key={`task#${i}`}\n        />\n      );\n    });\n  }, [allTasksReceived, taskAction]);\n\n  const projects = [1, 2, 3].map(testNo => <Project key={testNo} />);\n\n  return (\n    <>\n      <Grid className={styles.grid} columns={3} stackable>\n        <Grid.Row className={styles.row}>\n          <Grid.Column className={styles.column}>\n            <div className={styles.section}>\n              <div className={styles.contentContainer}>\n                <div className={styles.header}>\n                  <span className={styles.text}>\n                    <Icon name=\"tasks\" className={styles.icon} />\n                    Upcoming Tasks\n                  </span>\n                </div>\n                <div className={styles.body}>\n                  {loadingTasks || actionLoading ? <LoaderGeneric /> : tasks}\n                </div>\n              </div>\n            </div>\n          </Grid.Column>\n          <Grid.Column className={styles.column}>\n            <div className={styles.section}>\n              <div className={styles.contentContainer}>\n                <div className={styles.header}>\n                  <span className={styles.text}>\n                    <Icon\n                      name=\"list alternate outline\"\n                      className={styles.icon}\n                    />\n                    Active Projects\n                  </span>\n                </div>\n                <div className={styles.body}>{projects}</div>\n              </div>\n            </div>\n          </Grid.Column>\n          <Grid.Column className={styles.column}>\n            <div className={styles.section}>\n              <div className={styles.contentContainer}>\n                <div className={styles.header}>\n                  <span className={styles.text}>\n                    <Icon name=\"clock outline\" className={styles.icon} />\n                    Log\n                  </span>\n                </div>\n                <div className={styles.body}>\n                  <div className={styles.date}>\n                    <Label as=\"a\" color=\"blue\">\n                      Today\n                    </Label>\n                    <Events />\n                  </div>\n                  {/* <div className={styles.date}>\n                    <Label as=\"a\" color=\"blue\">\n                      Today\n                    </Label>\n                    {logs1}\n                  </div>\n\n                  <div className={styles.date}>\n                    <Label as=\"a\" color=\"blue\">\n                      Yesterday\n                    </Label>\n                    {logs2}\n                  </div>\n                  <div className={styles.date}>\n                    <Label as=\"a\" color=\"blue\">\n                      13.05.2022\n                    </Label>\n                        <Log\n                          isFirst\n                          isLast={false}\n                        />\n                        <Log\n                          isFirst={false}\n                          isLast\n                        />\n                  </div> */}\n                </div>\n              </div>\n            </div>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </>\n  );\n};\n\nTimeline.displayName = 'Timeline';\n\nexport { Timeline };\n","import React, { useEffect, useState } from 'react';\nimport { Button, Icon, Dropdown } from 'semantic-ui-react';\nimport styles from './Task.module.scss';\nimport { useTasks } from '../../hooks';\nimport { taskCallables } from '../../types';\n\nconst Task = ({ id, optionsOnClick }) => {\n  const { getTask } = useTasks();\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    if (id) {\n      const handleResponse = dataFromResponse =>\n        !dataFromResponse.isNone &&\n        setData({ taskId: id, ...dataFromResponse.toHuman() });\n\n      getTask(id, handleResponse);\n    }\n  }, [id, getTask]);\n\n  const OptionsDropdown = () => {\n    const trigger = (\n      <Button\n        className={styles.button}\n        // onClick={() => optionsOnClick(data?.taskId)}\n        icon=\"ellipsis vertical\"\n        basic\n      />\n    );\n\n    return (\n      <Dropdown trigger={trigger} icon={false} direction=\"left\">\n        <Dropdown.Menu style={{ top: '48px' }}>\n          <Dropdown.Item\n            text=\"Start\"\n            onClick={() =>\n              optionsOnClick(taskCallables.START_TASK, data?.taskId)\n            }\n          />\n          <Dropdown.Item\n            text=\"Complete\"\n            onClick={() =>\n              optionsOnClick(taskCallables.COMPLETE_TASK, data?.taskId)\n            }\n          />\n          <Dropdown.Item text=\"Update\" />\n          <Dropdown.Divider />\n          <Dropdown.Item\n            icon=\"close\"\n            text=\"Delete\"\n            onClick={() =>\n              optionsOnClick(taskCallables.REMOVE_TASK, data?.taskId)\n            }\n          />\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  };\n\n  return (\n    <>\n      <div className={styles.task}>\n        <div className={styles.content}>\n          <div className={styles.status}>\n            <div className={styles.content}>\n              {/* <span className={styles.descriptor}>Status: </span>\n            <span className={styles.state}>Task</span> */}\n              {/* <Button\n              className={styles.button}\n              onClick={() => optionsOnClick(data?.taskId)}\n              icon=\"ellipsis vertical\"\n              basic\n            /> */}\n              <OptionsDropdown />\n            </div>\n          </div>\n          <div className={styles.parentProject}>\n            <div className={styles.content}>\n              <Icon name=\"circle outline\" className={styles.icon} />\n              <span className={styles.title}>{data?.title}</span>\n            </div>\n          </div>\n          <div className={styles.taskDescription}>\n            <div className={styles.content}>\n              This is where the task description goes.\n              <div style={{ marginTop: '1rem' }}>Status: {data?.status}</div>\n              <div style={{ marginTop: '1rem' }}>\n                Specification: {data?.specification}\n              </div>\n              <div>budget: {data?.budget}</div>\n              <div>Deadline: {data?.deadline}</div>\n              <div style={{ wordBreak: 'break-all' }}>\n                Initiator: {data?.initiator}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className={styles.footer}>\n          <Button\n            className={styles.button}\n            icon=\"comment alternate outline\"\n            label={{ as: 'a', basic: true, content: '2' }}\n            labelPosition=\"left\"\n          />\n          <Button\n            className={styles.button}\n            icon=\"fork\"\n            label={{ as: 'a', basic: true, content: '11' }}\n            labelPosition=\"left\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nTask.displayName = 'Task';\n\nexport { Task };\n","import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport styles from './Project.module.scss';\n\nconst Project = ({ title, description }) => {\n  return (\n    <div className={styles.project}>\n      <div className={styles.content}>\n        <div className={styles.icon}>\n          <Icon name=\"circle outline\" className={styles.iconComponent} />\n        </div>\n        <div className={styles.info}>\n          <span className={styles.title}>\n            {title || 'Project: UniversalDot'}\n          </span>\n          <span className={styles.description}>\n            {description || 'xasCaWH151cx2145Cxwkqp2345pWpqz'}\n          </span>\n        </div>\n        <div className={styles.actions}>\n          <Button className={styles.button} icon=\"ellipsis vertical\" basic />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nProject.displayName = 'Project';\n\nexport { Project };\n","import React, { useEffect, useState } from 'react';\nimport { Feed, Button, Card } from 'semantic-ui-react';\n// import styles from './Events.module.scss';\nimport { useSubstrate } from '../../substrate-lib';\n\n// Events to be filtered from feed\nconst FILTERED_EVENTS = [\n  'system:ExtrinsicSuccess:: (phase={\"ApplyExtrinsic\":0})',\n  'system:ExtrinsicSuccess:: (phase={\"ApplyExtrinsic\":1})',\n];\n\nconst eventName = ev => `${ev.section}:${ev.method}`;\nconst eventParams = ev => JSON.stringify(ev.data);\n\nconst Events = () => {\n  const { api } = useSubstrate();\n  const [eventFeed, setEventFeed] = useState([]);\n\n  useEffect(() => {\n    let unsub = null;\n    let keyNum = 0;\n\n    if (api?.query?.system) {\n      const allEvents = async () => {\n        unsub = await api.query.system.events(events => {\n          // loop through the Vec<EventRecord>\n          events.forEach(record => {\n            // extract the phase, event and the event types\n            const { event, phase } = record;\n\n            // show what we are busy with\n            const evHuman = event.toHuman();\n            const evName = eventName(evHuman);\n            const evParams = eventParams(evHuman);\n            const evNamePhase = `${evName}::(phase=${phase.toString()})`;\n\n            if (FILTERED_EVENTS.includes(evNamePhase)) return;\n\n            setEventFeed(e => [\n              {\n                key: keyNum,\n                icon: 'bell',\n                summary: evName,\n                content: evParams,\n              },\n              ...e,\n            ]);\n\n            keyNum += 1;\n          });\n        });\n      };\n\n      allEvents();\n    }\n\n    return () => unsub && unsub();\n  }, [api?.query?.system]);\n\n  // eslint-disable-next-line multiline-ternary\n  return api?.query?.system?.events ? (\n    <Card fluid color=\"blue\">\n      <Card.Content style={{ flexGrow: 0 }}>\n        <Card.Header>\n          Events\n          <Button\n            basic\n            circular\n            size=\"mini\"\n            color=\"grey\"\n            floated=\"right\"\n            icon=\"erase\"\n            onClick={_ => setEventFeed([])}\n          />\n        </Card.Header>\n      </Card.Content>\n      <Card.Content>\n        <Feed\n          style={{ clear: 'both', overflow: 'auto', maxHeight: 250 }}\n          events={eventFeed}\n        />\n      </Card.Content>\n    </Card>\n  ) : (\n    <div>There are no events...</div>\n  );\n};\n\nEvents.displayName = 'Events';\n\nexport { Events };\n","/* eslint-disable indent */\nimport React from 'react';\nimport styles from './PageContainer.module.scss';\n\nconst PageContainer = ({ children }) => {\n  return <div className={styles.pageContainer}>{children}</div>;\n};\n\nPageContainer.displayName = 'PageContainer';\n\nexport { PageContainer };\n","/* eslint-disable indent */\nimport React, { useState, useEffect, useCallback } from 'react';\nimport Board from 'react-trello';\nimport { Button, Grid, Input } from 'semantic-ui-react';\nimport { Modal } from '../';\nimport { useTasks, useStatus } from '../../hooks';\n\nimport { statusTypes, taskCallables } from '../../types';\nimport styles from './KanbanBoard.module.scss';\n\nconst KanbanBoard = () => {\n  const [open, setOpen] = useState(false);\n\n  const { populateTask, taskValues, taskAction, isEditMode, actionLoading } =\n    useTasks();\n  const { status, setStatus } = useStatus();\n\n  const [showLoader, setShowLoader] = useState(false);\n\n  const mockData = {\n    lanes: [\n      {\n        id: 'lane1',\n        title: 'Backlog',\n        label: '2',\n        cards: [\n          {\n            id: 'Card1',\n            title: 'Write Blog',\n            description: 'Can AI make memes',\n            label: '30 mins',\n            draggable: false,\n          },\n          {\n            id: 'Card2',\n            title: 'Pay Rent',\n            description: 'Transfer via NEFT',\n            label: '5 mins',\n            metadata: { sha: 'be312a1' },\n          },\n        ],\n      },\n      {\n        id: 'lane2',\n        title: 'To Do',\n        label: '0',\n        cards: [],\n      },\n      {\n        id: 'lane3',\n        title: 'In Progress',\n        label: '0',\n        cards: [],\n      },\n      {\n        id: 'lane4',\n        title: 'Done',\n        label: '0',\n        cards: [],\n      },\n    ],\n  };\n\n  const custom = props => {\n    // console.log('props lane', props);\n    if (props.id === 'lane1') {\n      return (\n        <div\n          style={{\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}\n        >\n          <div>Backlog</div>\n          <Button primary onClick={() => setOpen(true)}>\n            Add new task\n          </Button>\n        </div>\n      );\n    }\n\n    return (\n      <div style={{ padding: '0.6rem 0' }}>\n        <div>{props.title}</div>\n      </div>\n    );\n  };\n\n  const handleClose = useCallback(() => setOpen(false), []);\n\n  const handleOnChange = (key, value) => {\n    populateTask({\n      key,\n      value,\n    });\n  };\n\n  useEffect(() => {\n    if (!!status && status === statusTypes.INIT) {\n      setShowLoader(true);\n    }\n\n    if (!!status && status === statusTypes.IN_BLOCK) {\n      setShowLoader(false);\n      handleClose();\n      setTimeout(() => {\n        setStatus('');\n      }, 5000);\n    }\n  }, [status, setStatus, handleClose]);\n\n  return (\n    <>\n      <Board\n        style={{ height: '50vh', background: 'none', padding: '0' }}\n        components={{ LaneHeader: custom }}\n        data={mockData}\n      />\n      <Modal\n        open={open}\n        onClose={handleClose}\n        title=\"Create task\"\n        description=\"Fill the details below to create your task.\"\n        loading={actionLoading || showLoader}\n        actionButtonLabel={isEditMode ? 'Update task' : 'Create task'}\n        actionButtonColor={isEditMode ? 'green' : 'blue'}\n        actionButtonOnClick={() =>\n          taskAction(\n            isEditMode ? taskCallables.UPDATE_TASK : taskCallables.CREATE_TASK,\n            taskValues\n          )\n        }\n        removeButtonLabel=\"Remove Task\"\n        removeButtonOnClick={taskCallables.REMOVE_TASK}\n        showRemoveButton={isEditMode}\n      >\n        <Grid className={styles.gridContainer}>\n          <Grid.Row>\n            <Grid.Column>\n              <Input\n                placeholder=\"Enter task title...\"\n                fluid\n                type=\"text\"\n                label=\"Title:\"\n                value={taskValues?.title || ''}\n                onChange={e => handleOnChange('title', e.target.value)}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Input\n                placeholder=\"Enter task specification...\"\n                fluid\n                type=\"text\"\n                label=\"Specification:\"\n                value={taskValues?.specification || ''}\n                onChange={e => handleOnChange('specification', e.target.value)}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Input\n                placeholder=\"Enter task budget...\"\n                fluid\n                type=\"text\"\n                label=\"Budget:\"\n                value={taskValues?.budget || ''}\n                onChange={e => handleOnChange('budget', e.target.value)}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column>\n              <Input\n                placeholder=\"Enter task deadline\"\n                fluid\n                type=\"text\"\n                label=\"Deadline:\"\n                value={taskValues?.deadline || ''}\n                onChange={e => handleOnChange('deadline', e.target.value)}\n              />\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nKanbanBoard.displayName = 'KanbanBoard';\n\nexport { KanbanBoard };\n","/* eslint-disable multiline-ternary */\nimport React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport { useStatus, useLoader } from '../../hooks';\n\nconst LoaderFullPage = () => {\n  const { message } = useStatus();\n  const { loadingProfile, loadingTasks } = useLoader();\n\n  return loadingProfile || loadingTasks ? (\n    <Dimmer active>\n      <Loader size=\"small\">{message || ''}</Loader>\n    </Dimmer>\n  ) : (\n    <></>\n  );\n};\n\nLoaderFullPage.displayName = 'LoaderFullPage';\n\nexport { LoaderFullPage };\n","/* eslint-disable multiline-ternary */\nimport React from 'react';\nimport { Loader } from 'semantic-ui-react';\nimport styles from './LoaderGeneric.module.scss';\n\nconst LoaderGeneric = ({ text }) => {\n  return (\n    <div className={styles.loaderContainer}>\n      <Loader active inline>\n        {text || ''}\n      </Loader>\n    </div>\n  );\n};\n\nLoaderGeneric.displayName = 'LoaderGeneric';\n\nexport { LoaderGeneric };\n","/* eslint-disable multiline-ternary */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { Grid, Icon, Card, Button, Input } from 'semantic-ui-react';\nimport styles from './Organizations.module.scss';\nimport { Project, Modal } from '..';\nimport { useUser, useDao, useStatus } from '../../hooks';\nimport { daoCallables, statusTypes } from '../../types';\n\nconst Organizations = ({ type }) => {\n  const [open, setOpen] = useState(false);\n  const [actionType, setActionType] = useState('');\n  const [showLoader, setShowLoader] = useState(false);\n\n  const [modalTitle, setModalTitle] = useState('');\n  const [daoType, setDaoType] = useState('');\n\n  const { status, setStatus } = useStatus();\n\n  const { selectedKeyring } = useUser();\n  const {\n    getJoinedOrganizations,\n    getTotalOrganizations,\n    getTotalVisions,\n    getSuggestedVisions,\n    totalOrganizations,\n    totalVisions,\n    joinedOrganizations,\n    suggestedVisions,\n    actionLoading,\n    daoAction,\n    setVisionName,\n    visionNameForAction,\n    organizationNameForAction,\n    memberOrTaskForAction,\n    setOrganizationName,\n    setMemberOrTask,\n    getApplicants,\n    allApplicants,\n    resetFields,\n  } = useDao();\n\n  const [searchOrg, setSearchOrg] = useState('');\n\n  const visionNameTypes = [\n    daoCallables.SIGN_VISION,\n    daoCallables.UNSIGN_VISION,\n    daoCallables.CREATE_VISION,\n    daoCallables.REMOVE_VISION,\n  ];\n  const orgNameTypes = [\n    daoCallables.CREATE_ORGANIZATION,\n    daoCallables.DISSOLVE_ORGANIZATION,\n    daoCallables.ADD_MEMBERS,\n    daoCallables.REMOVE_MEMBERS,\n    daoCallables.ADD_TASKS,\n    daoCallables.REMOVE_TASKS,\n  ];\n  const memberAndTaskTypes = [\n    daoCallables.ADD_MEMBERS,\n    daoCallables.REMOVE_MEMBERS,\n    daoCallables.ADD_TASKS,\n    daoCallables.REMOVE_TASKS,\n  ];\n  const taskTypes = [daoCallables.ADD_TASKS, daoCallables.REMOVE_TASKS];\n\n  useEffect(() => {\n    if (actionType) {\n      let title = '';\n      let daoType = '';\n      switch (actionType) {\n        case 'joined_sign':\n          title = 'Sign vision';\n          daoType = daoCallables.SIGN_VISION;\n          break;\n        case 'joined_unsign':\n          title = 'Unsign vision';\n          daoType = daoCallables.UNSIGN_VISION;\n          break;\n        case 'own_createVision':\n          title = 'Create vision';\n          daoType = daoCallables.CREATE_VISION;\n          break;\n        case 'own_createOrganization':\n          title = 'Create organization';\n          daoType = daoCallables.CREATE_ORGANIZATION;\n          break;\n        case 'own_addMember':\n          title = 'Add member';\n          daoType = daoCallables.ADD_MEMBERS;\n          break;\n        case 'own_addTask':\n          title = 'Add task';\n          daoType = daoCallables.ADD_TASKS;\n          break;\n        case 'own_removeVision':\n          title = 'Remove vision';\n          daoType = daoCallables.REMOVE_VISION;\n          break;\n        case 'own_dissolveOrganization':\n          title = 'Dissolve organization';\n          daoType = daoCallables.DISSOLVE_ORGANIZATION;\n          break;\n        case 'own_removeMembers':\n          title = 'Remove members';\n          daoType = daoCallables.REMOVE_MEMBERS;\n          break;\n        case 'own_removeTask':\n          title = 'Remove task';\n          daoType = daoCallables.REMOVE_TASKS;\n          break;\n        default:\n      }\n      setModalTitle(title);\n      setDaoType(daoType);\n    }\n  }, [actionType]);\n\n  useEffect(() => {\n    if (selectedKeyring.value) {\n      getJoinedOrganizations(selectedKeyring.value, daoCallables.MEMBER_OF);\n      getTotalOrganizations(daoCallables.ORGANIZATION_COUNT);\n      getTotalVisions(daoCallables.VISION_COUNT);\n      getSuggestedVisions(selectedKeyring.value, daoCallables.VISION);\n    }\n  }, [\n    selectedKeyring.value,\n    getJoinedOrganizations,\n    getTotalOrganizations,\n    getTotalVisions,\n    getSuggestedVisions,\n  ]);\n\n  const handleClose = useCallback(() => setOpen(false), []);\n\n  const handleTopInputOnChange = useCallback(\n    (inputType, value) => {\n      switch (inputType) {\n        case daoCallables.SIGN_VISION:\n        case daoCallables.UNSIGN_VISION:\n        case daoCallables.CREATE_VISION:\n        case daoCallables.REMOVE_VISION:\n          setVisionName(value);\n          break;\n        case daoCallables.CREATE_ORGANIZATION:\n        case daoCallables.DISSOLVE_ORGANIZATION:\n        case daoCallables.ADD_MEMBERS:\n        case daoCallables.ADD_TASKS:\n        case daoCallables.REMOVE_MEMBERS:\n        case daoCallables.REMOVE_TASKS:\n          setOrganizationName(value);\n          break;\n        case 'memberOrTask':\n          setMemberOrTask(value);\n          break;\n        default:\n      }\n    },\n    [setMemberOrTask, setVisionName, setOrganizationName]\n  );\n\n  const handleBottomInputOnChange = useCallback(\n    (inputType, value) => {\n      switch (inputType) {\n        case daoCallables.CREATE_ORGANIZATION:\n        case daoCallables.DISSOLVE_ORGANIZATION:\n        case daoCallables.ADD_MEMBERS:\n        case daoCallables.ADD_TASKS:\n        case daoCallables.REMOVE_MEMBERS:\n        case daoCallables.REMOVE_TASKS:\n          setMemberOrTask(value);\n          break;\n        default:\n      }\n    },\n    [setMemberOrTask]\n  );\n\n  const buttonClick = useCallback(\n    actionType => {\n      setActionType(actionType);\n      resetFields();\n      setOpen(true);\n    },\n    [resetFields]\n  );\n\n  useEffect(() => {\n    if (!!status && status === statusTypes.INIT) {\n      setShowLoader(true);\n    }\n\n    if (!!status && status === statusTypes.IN_BLOCK) {\n      setShowLoader(false);\n      handleClose();\n      setTimeout(() => {\n        setStatus('');\n      }, 5000);\n    }\n  }, [status, setStatus, handleClose]);\n\n  const searchOrganization = () => {\n    getApplicants(searchOrg);\n  };\n\n  const handleOnSearchOrg = val => {\n    setSearchOrg(val);\n  };\n\n  return (\n    <>\n      {type === 'joined' && (\n        <>\n          <Grid className={styles.gridStats}>\n            <Grid.Row className={styles.row}>\n              <Grid.Column\n                className={styles.column}\n                mobile={16}\n                tablet={16}\n                computer={8}\n              >\n                <Card fluid raised color=\"purple\" className={styles.card}>\n                  <Card.Content className={styles.contentContainer}>\n                    <div className={styles.header}>\n                      <span className={styles.text}>Total organizations</span>\n                      <Button basic className={styles.button}>\n                        Details\n                      </Button>\n                    </div>\n                    <Card.Description className={styles.description}>\n                      {totalOrganizations}\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Grid.Column>\n              <Grid.Column\n                className={styles.column}\n                mobile={16}\n                tablet={16}\n                computer={8}\n              >\n                <Card fluid raised color=\"pink\" className={styles.card}>\n                  <Card.Content className={styles.contentContainer}>\n                    <div className={styles.header}>\n                      <span className={styles.text}>Total visions</span>\n                      <Button basic className={styles.button}>\n                        Details\n                      </Button>\n                    </div>\n                    <Card.Description className={styles.description}>\n                      {totalVisions}\n                    </Card.Description>\n                  </Card.Content>\n                </Card>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Grid className={styles.grid} columns={3} stackable>\n            <Grid.Row className={styles.row}>\n              <Grid.Column className={styles.column}>\n                <div className={styles.section}>\n                  <div className={styles.contentContainer}>\n                    <div className={styles.header}>\n                      <span className={styles.text}>\n                        <Icon name=\"globe\" className={styles.icon} />\n                        Joined organizations\n                      </span>\n                    </div>\n                    <div className={styles.body}>\n                      {joinedOrganizations.map(org => (\n                        <Project\n                          key={org}\n                          title={org}\n                          description=\"Lorem ipsum...\"\n                        />\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              </Grid.Column>\n              <Grid.Column className={styles.column}>\n                <div className={styles.section}>\n                  <div className={styles.contentContainer}>\n                    <div className={styles.header}>\n                      <span className={styles.text}>\n                        <Icon name=\"file text\" className={styles.icon} />\n                        Suggested visions\n                      </span>\n                    </div>\n                    <div className={styles.body}>\n                      {suggestedVisions.map(suggVis => (\n                        <Project\n                          key={suggVis}\n                          title={suggVis.substring(0, 12) + '...'}\n                          description=\"Lorem ipsum...\"\n                        />\n                      ))}\n                      <div className={styles.visionButtons}>\n                        <Button\n                          className={styles.visionButton}\n                          color=\"green\"\n                          type=\"submit\"\n                          onClick={() => buttonClick('joined_sign')}\n                        >\n                          Sign vision\n                        </Button>\n                        <Button\n                          className={styles.visionButton}\n                          color=\"orange\"\n                          onClick={() => buttonClick('joined_unsign')}\n                        >\n                          Unsign vision\n                        </Button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n        </>\n      )}\n      {type === 'own' && (\n        <Grid className={styles.grid} columns={4} stackable>\n          <Grid.Row className={styles.row}>\n            <Grid.Column className={styles.column}>\n              <Button\n                color=\"green\"\n                type=\"submit\"\n                onClick={() => buttonClick('own_createVision')}\n              >\n                Create vision\n              </Button>\n            </Grid.Column>\n            <Grid.Column className={styles.column}>\n              <Button\n                color=\"green\"\n                type=\"submit\"\n                onClick={() => buttonClick('own_createOrganization')}\n              >\n                Create organization\n              </Button>\n            </Grid.Column>\n            <Grid.Column className={styles.column}>\n              <Button\n                color=\"green\"\n                type=\"submit\"\n                onClick={() => buttonClick('own_addMember')}\n              >\n                Add member\n              </Button>\n            </Grid.Column>\n            <Grid.Column className={styles.column}>\n              <Button\n                color=\"green\"\n                type=\"submit\"\n                onClick={() => buttonClick('own_addTask')}\n              >\n                Add task\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n          <Grid.Row className={styles.row}>\n            <Grid.Column className={styles.column}>\n              <Button\n                color=\"orange\"\n                onClick={() => buttonClick('own_removeVision')}\n              >\n                Remove vision\n              </Button>\n            </Grid.Column>\n            <Grid.Column className={styles.column}>\n              <Button\n                color=\"orange\"\n                onClick={() => buttonClick('own_dissolveOrganization')}\n              >\n                Dissolve organization\n              </Button>\n            </Grid.Column>\n            <Grid.Column className={styles.column}>\n              <Button\n                color=\"orange\"\n                onClick={() => buttonClick('own_removeMembers')}\n              >\n                Remove members\n              </Button>\n            </Grid.Column>\n            <Grid.Column className={styles.column}>\n              <Button\n                color=\"orange\"\n                onClick={() => buttonClick('own_removeTask')}\n              >\n                Remove task\n              </Button>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      )}\n      {type === 'own' && (\n        <Grid className={styles.gridContainer}>\n          <Grid.Row className={styles.row}>\n            <Grid.Column mobile={16} tablet={16} computer={8}>\n              <Input\n                placeholder=\"For ex. MyOrg123\"\n                action={{\n                  icon: 'search',\n                  onClick: searchOrganization,\n                }}\n                fluid\n                type=\"text\"\n                label=\"Search for an organization:\"\n                value={searchOrg}\n                onChange={e => handleOnSearchOrg(e.target.value)}\n              />\n            </Grid.Column>\n          </Grid.Row>\n          {allApplicants && (\n            <Grid.Row className={styles.row}>\n              <Grid.Column mobile={16} tablet={16} computer={8}>\n                {allApplicants.map(appl => (\n                  <div key={appl}>{appl}</div>\n                ))}\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      )}\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        title={modalTitle}\n        description=\"Fill the required field/s below.\"\n        loading={actionLoading || showLoader}\n        actionButtonLabel=\"Submit\"\n        actionButtonColor=\"blue\"\n        actionButtonOnClick={() => daoAction(daoType)}\n        showRemoveButton={false}\n      >\n        <Grid className={styles.gridContainer}>\n          <Grid.Row>\n            <Grid.Column>\n              {visionNameTypes.includes(daoType) && (\n                <Input\n                  placeholder=\"Enter an organization's vision name...\"\n                  fluid\n                  type=\"text\"\n                  label=\"Vision name:\"\n                  value={visionNameForAction || ''}\n                  onChange={e =>\n                    handleTopInputOnChange(daoType, e.target.value)\n                  }\n                />\n              )}\n              {orgNameTypes.includes(daoType) && (\n                <Input\n                  placeholder=\"Enter an organization name...\"\n                  fluid\n                  type=\"text\"\n                  label=\"Organization name:\"\n                  value={organizationNameForAction || ''}\n                  onChange={e =>\n                    handleTopInputOnChange(daoType, e.target.value)\n                  }\n                />\n              )}\n            </Grid.Column>\n          </Grid.Row>\n          {memberAndTaskTypes.includes(daoType) && (\n            <Grid.Row>\n              <Grid.Column>\n                <Input\n                  placeholder=\"Enter value...\"\n                  fluid\n                  type=\"text\"\n                  label={taskTypes.includes(daoType) ? 'Task:' : 'Member:'}\n                  value={memberOrTaskForAction || ''}\n                  onChange={e =>\n                    handleBottomInputOnChange(daoType, e.target.value)\n                  }\n                />\n              </Grid.Column>\n            </Grid.Row>\n          )}\n        </Grid>\n      </Modal>\n    </>\n  );\n};\n\nOrganizations.displayName = 'Organizations';\n\nexport { Organizations };\n","/* eslint-disable indent */\nimport { useCallback, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { web3FromSource } from '@polkadot/extension-dapp';\nimport { useSubstrate } from '../substrate-lib';\n// import {} from '../store/slices/daoSlice';\nimport { useUser } from './useUser';\nimport { useStatus } from './useStatus';\nimport { useLoader } from './useLoader';\nimport {\n  statusTypes,\n  pallets,\n  toastTypes,\n  loadingTypes,\n  daoCallables,\n} from '../types';\nimport { useToast } from './useToast';\nimport {\n  setTotalOrganizations,\n  setTotalVisions,\n  setJoinedOrganizations,\n  setSuggestedVisions,\n  setVisionName as setVisionNameForAnAction,\n  setOrganizationName as setOrganizationNameForAnAction,\n  setMemberOrTask as setMemberOrTaskForAnAction,\n  setApplicants as setApplicantsToOrg,\n  resetState,\n} from '../store/slices/daoSlice';\n\nconst useDao = () => {\n  const dispatch = useDispatch();\n  const { api, keyring, keyringState } = useSubstrate();\n  const [unsub, setUnsub] = useState(null);\n  const [actionLoading, setActionLoading] = useState(false);\n\n  const { selectedKeyring } = useUser();\n  const { setStatus, setStatusMessage } = useStatus();\n  const { setLoading } = useLoader();\n  const { toast } = useToast();\n\n  const totalOrganizations = useSelector(state => state.dao.totalOrganizations);\n  const totalVisions = useSelector(state => state.dao.totalVisions);\n  const joinedOrganizations = useSelector(\n    state => state.dao.joinedOrganizations\n  );\n  const suggestedVisions = useSelector(state => state.dao.suggestedVisions);\n  const visionNameForAction = useSelector(\n    state => state.dao.visionNameForAction\n  );\n  const organizationNameForAction = useSelector(\n    state => state.dao.organizationNameForAction\n  );\n  const memberOrTaskForAction = useSelector(\n    state => state.dao.memberOrTaskForAction\n  );\n  const allApplicants = useSelector(\n    state => state.dao.applicantsToOrganization\n  );\n\n  const setVisionName = visionName => {\n    dispatch(setVisionNameForAnAction(visionName));\n  };\n\n  const setOrganizationName = orgName => {\n    dispatch(setOrganizationNameForAnAction(orgName));\n  };\n\n  const setMemberOrTask = memberOrTaskId => {\n    dispatch(setMemberOrTaskForAnAction(memberOrTaskId));\n  };\n\n  const resetFields = () => {\n    dispatch(resetState());\n  };\n\n  const handleQueryResponse = (dataFromResponse, daoQueryType) => {\n    if (!dataFromResponse.isNone) {\n      switch (daoQueryType) {\n        // TODO: wait for fixed data type from BE, mocked meanwhile:\n        case daoCallables.MEMBER_OF:\n          dispatch(\n            setJoinedOrganizations([\n              'Organization 1',\n              'Organization 2',\n              'Organization 3',\n            ])\n          );\n          break;\n        case daoCallables.ORGANIZATION_COUNT:\n          dispatch(setTotalOrganizations(dataFromResponse.toHuman()));\n          break;\n        case daoCallables.VISION_COUNT:\n          dispatch(setTotalVisions(dataFromResponse.toHuman()));\n          break;\n        case daoCallables.VISION:\n          dispatch(setSuggestedVisions(dataFromResponse.toHuman()));\n          break;\n        case daoCallables.APPLICANTS_TO_ORGANIZATION:\n          dispatch(setApplicantsToOrg(dataFromResponse.toHuman()));\n          break;\n        default:\n      }\n    }\n  };\n\n  const getApplicants = useCallback(\n    organizationName => {\n      const query = async () => {\n        const unsub = await api?.query[pallets.DAO][\n          daoCallables.APPLICANTS_TO_ORGANIZATION\n        ](organizationName, resData =>\n          handleQueryResponse(resData, daoCallables.APPLICANTS_TO_ORGANIZATION)\n        );\n        const cb = () => unsub;\n        cb();\n      };\n\n      query();\n    },\n    [api]\n  );\n\n  const getJoinedOrganizations = useCallback(\n    (userKey, daoQueryType) => {\n      const query = async () => {\n        const unsub = await api?.query[pallets.DAO][daoCallables.MEMBER_OF](\n          userKey,\n          resData => handleQueryResponse(resData, daoQueryType)\n        );\n        const cb = () => unsub;\n        cb();\n      };\n\n      query();\n    },\n    [api]\n  );\n\n  const getTotalOrganizations = useCallback(\n    daoQueryType => {\n      const query = async () => {\n        const unsub = await api?.query[pallets.DAO][\n          daoCallables.ORGANIZATION_COUNT\n        ](resData => handleQueryResponse(resData, daoQueryType));\n        const cb = () => unsub;\n        cb();\n      };\n\n      query();\n    },\n    [api]\n  );\n\n  const getTotalVisions = useCallback(\n    daoQueryType => {\n      const query = async () => {\n        const unsub = await api?.query[pallets.DAO][daoCallables.VISION_COUNT](\n          resData => handleQueryResponse(resData, daoQueryType)\n        );\n        const cb = () => unsub;\n        cb();\n      };\n\n      query();\n    },\n    [api]\n  );\n\n  const getSuggestedVisions = useCallback(\n    (userKey, daoQueryType) => {\n      const query = async () => {\n        const unsub = await api?.query[pallets.DAO][daoCallables.VISION](\n          userKey,\n          resData => handleQueryResponse(resData, daoQueryType)\n        );\n        const cb = () => unsub;\n        cb();\n      };\n\n      query();\n    },\n    [api]\n  );\n\n  const signedTx = async actionType => {\n    const accountPair =\n      selectedKeyring.value &&\n      keyringState === 'READY' &&\n      keyring.getPair(selectedKeyring.value);\n\n    const getFromAcct = async () => {\n      const {\n        address,\n        meta: { source, isInjected },\n      } = accountPair;\n      let fromAcct;\n\n      // signer is from Polkadot-js browser extension\n      if (isInjected) {\n        const injected = await web3FromSource(source);\n        fromAcct = address;\n        api.setSigner(injected.signer);\n      } else {\n        fromAcct = accountPair;\n      }\n\n      return fromAcct;\n    };\n\n    const fromAcct = await getFromAcct();\n\n    // TODO: orgName should be refactored to orgId in BE;\n    const transformedPayloadAddMembers = [\n      organizationNameForAction || '',\n      memberOrTaskForAction || '',\n    ];\n\n    // TODO: orgName should be refactored to orgId in BE;\n    const transformedPayloadAddTasks = [\n      organizationNameForAction || '',\n      memberOrTaskForAction || '',\n    ];\n\n    const transformedPayloadCreateOrg = [organizationNameForAction];\n    // TODO: should accept more data (title, desc, etc.) not just visionDocument;\n    const transformedPayloadCreateVision = [visionNameForAction];\n    // TODO: payload is orgName, but should be refactored to orgId in BE;\n    const transformedPayloadDissolveOrg = [organizationNameForAction];\n    // TODO: orgName should be refactored to orgId in BE;\n    const transformedPayloadRemoveMembers = [\n      organizationNameForAction || '',\n      memberOrTaskForAction || '',\n    ];\n    // TODO: orgName should be refactored to orgId in BE;\n    const transformedPayloadRemoveTasks = [\n      organizationNameForAction || '',\n      memberOrTaskForAction || '',\n    ];\n    // TODO: visionDocument should be refactored to visionId in BE;\n    const transformedPayloadRemoveVision = [visionNameForAction];\n    // TODO: visionDocument should be refactored to visionId in BE;\n    const transformedPayloadSignVision = [visionNameForAction];\n    // TODO: visionDocument should be refactored to visionId in BE;\n    const transformedPayloadUnsignVision = [visionNameForAction];\n\n    let txExecute;\n\n    if (actionType === daoCallables.ADD_MEMBERS) {\n      txExecute = api.tx[pallets.DAO][daoCallables.ADD_MEMBERS](\n        ...transformedPayloadAddMembers\n      );\n    }\n\n    if (actionType === daoCallables.ADD_TASKS) {\n      txExecute = api.tx[pallets.DAO][daoCallables.ADD_TASKS](\n        ...transformedPayloadAddTasks\n      );\n    }\n\n    if (actionType === daoCallables.CREATE_ORGANIZATION) {\n      txExecute = api.tx[pallets.DAO][daoCallables.CREATE_ORGANIZATION](\n        ...transformedPayloadCreateOrg\n      );\n    }\n\n    if (actionType === daoCallables.CREATE_VISION) {\n      txExecute = api.tx[pallets.DAO][daoCallables.CREATE_VISION](\n        ...transformedPayloadCreateVision\n      );\n    }\n\n    if (actionType === daoCallables.DISSOLVE_ORGANIZATION) {\n      txExecute = api.tx[pallets.DAO][daoCallables.DISSOLVE_ORGANIZATION](\n        ...transformedPayloadDissolveOrg\n      );\n    }\n\n    if (actionType === daoCallables.REMOVE_MEMBERS) {\n      txExecute = api.tx[pallets.DAO][daoCallables.REMOVE_MEMBERS](\n        ...transformedPayloadRemoveMembers\n      );\n    }\n\n    if (actionType === daoCallables.REMOVE_TASKS) {\n      txExecute = api.tx[pallets.DAO][daoCallables.REMOVE_TASKS](\n        ...transformedPayloadRemoveTasks\n      );\n    }\n\n    if (actionType === daoCallables.REMOVE_VISION) {\n      txExecute = api.tx[pallets.DAO][daoCallables.REMOVE_VISION](\n        ...transformedPayloadRemoveVision\n      );\n    }\n\n    if (actionType === daoCallables.SIGN_VISION) {\n      txExecute = api.tx[pallets.DAO][daoCallables.SIGN_VISION](\n        ...transformedPayloadSignVision\n      );\n    }\n\n    if (actionType === daoCallables.UNSIGN_VISION) {\n      txExecute = api.tx[pallets.DAO][daoCallables.UNSIGN_VISION](\n        ...transformedPayloadUnsignVision\n      );\n    }\n\n    const transactionResponseHandler = res => {\n      const callStatus = res.status;\n\n      if (callStatus?.isFinalized) {\n        // TODO: make a call to repopulate state with latest changes from the blockchain;\n      }\n\n      if (callStatus?.isFinalized) {\n        setStatus(statusTypes.FINALIZED);\n        setTimeout(() => {\n          setStatus('');\n        }, [5000]);\n      }\n      if (callStatus?.isInBlock) {\n        setStatus(statusTypes.IN_BLOCK);\n      }\n\n      if (callStatus?.isInBlock) {\n        if (actionType === daoCallables.ADD_MEMBERS) {\n          toast(\n            'Member added to organization successfully!',\n            toastTypes.SUCCESS\n          );\n        }\n\n        if (actionType === daoCallables.ADD_TASKS) {\n          toast('Task added to organization successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === daoCallables.CREATE_ORGANIZATION) {\n          toast('Organization created successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === daoCallables.CREATE_VISION) {\n          toast('Vision created successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === daoCallables.DISSOLVE_ORGANIZATION) {\n          toast('Organization dissolved successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === daoCallables.REMOVE_MEMBERS) {\n          toast(\n            'Member deleted from organization successfully!',\n            toastTypes.SUCCESS\n          );\n        }\n\n        if (actionType === daoCallables.REMOVE_TASKS) {\n          toast(\n            'Task deleted from organization successfully!',\n            toastTypes.SUCCESS\n          );\n        }\n\n        if (actionType === daoCallables.REMOVE_VISION) {\n          toast('Vision deleted successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === daoCallables.SIGN_VISION) {\n          toast('Vision signed successfully!', toastTypes.SUCCESS);\n        }\n\n        if (actionType === daoCallables.UNSIGN_VISION) {\n          toast('Vision unsigned successfully!', toastTypes.SUCCESS);\n        }\n      }\n\n      setActionLoading(false);\n      setVisionName('');\n      setOrganizationName('');\n      setMemberOrTask('');\n    };\n\n    const transactionErrorHandler = err => {\n      setStatus(statusTypes.ERROR);\n      setStatusMessage(err.toString());\n    };\n\n    const unsub = await txExecute\n      .signAndSend(fromAcct, transactionResponseHandler)\n      .catch(transactionErrorHandler);\n\n    setUnsub(() => unsub);\n  };\n\n  const daoAction = async actionType => {\n    if (typeof unsub === 'function') {\n      unsub();\n      setUnsub(null);\n    }\n\n    setStatus(statusTypes.INIT);\n\n    toast('Working on your request...', toastTypes.INFO);\n\n    setActionLoading(true);\n\n    signedTx(actionType);\n  };\n\n  return {\n    daoAction,\n    actionLoading,\n    getJoinedOrganizations,\n    getTotalOrganizations,\n    getTotalVisions,\n    getSuggestedVisions,\n    totalOrganizations,\n    totalVisions,\n    joinedOrganizations,\n    suggestedVisions,\n    setVisionName,\n    visionNameForAction,\n    organizationNameForAction,\n    memberOrTaskForAction,\n    setOrganizationName,\n    setMemberOrTask,\n    allApplicants,\n    getApplicants,\n    resetFields,\n  };\n};\n\nexport { useDao };\n","import React from 'react';\nimport {\n  Button,\n  Grid,\n  Segment,\n  Portal,\n  Card,\n  Placeholder,\n  Icon,\n} from 'semantic-ui-react';\nimport styles from './Modal.module.scss';\n\nconst Modal = ({\n  title,\n  description,\n  open,\n  onClose,\n  loading,\n  actionButtonLabel,\n  actionButtonColor,\n  actionButtonOnClick,\n  removeButtonLabel,\n  removeButtonOnClick,\n  showRemoveButton,\n  children,\n}) => {\n  // TODO: make it scrollable;\n\n  return (\n    <Grid columns={2}>\n      <Grid.Column>\n        <Portal open={open}>\n          <Segment\n            style={{\n              position: 'fixed',\n              top: '50%',\n              left: '50%',\n              transform: 'translate(-50%, -50%)',\n              zIndex: 1000,\n              width: '600px',\n              padding: '0',\n            }}\n            raised\n          >\n            <Card fluid className={styles.card} style={{ boxShadow: 'none' }}>\n              {!loading && (\n                <Card.Content>\n                  <Card.Header className={styles.cardHeader}>\n                    {title}\n                    <Button\n                      circular\n                      basic\n                      onClick={onClose}\n                      icon={<Icon name=\"close\" />}\n                    />\n                  </Card.Header>\n                </Card.Content>\n              )}\n              {loading && (\n                <Card.Content>\n                  <Placeholder>\n                    <Placeholder.Header>\n                      <Placeholder.Line />\n                    </Placeholder.Header>\n                  </Placeholder>\n                </Card.Content>\n              )}\n              {!loading && <Card.Content description={description} />}\n              {loading && (\n                <Card.Content>\n                  <Placeholder>\n                    <Placeholder.Header>\n                      <Placeholder.Line />\n                    </Placeholder.Header>\n                  </Placeholder>\n                </Card.Content>\n              )}\n              {!loading && (\n                <Card.Content className={styles.body}>{children}</Card.Content>\n              )}\n              {loading && (\n                <Card.Content>\n                  <Placeholder>\n                    <Placeholder.Header>\n                      <Placeholder.Line />\n                    </Placeholder.Header>\n                    <Placeholder.Paragraph>\n                      <Placeholder.Line />\n                      <Placeholder.Line />\n                      <Placeholder.Line />\n                      <Placeholder.Line />\n                    </Placeholder.Paragraph>\n                  </Placeholder>\n                </Card.Content>\n              )}\n              {!loading && (\n                <Card.Content extra>\n                  <Button\n                    color={actionButtonColor || 'blue'}\n                    type=\"submit\"\n                    onClick={actionButtonOnClick}\n                    loading={loading}\n                    disabled={loading}\n                  >\n                    {actionButtonLabel}\n                  </Button>\n                  {showRemoveButton && (\n                    <Button\n                      color=\"red\"\n                      onClick={removeButtonOnClick}\n                      loading={loading}\n                      disabled={loading}\n                    >\n                      {removeButtonLabel}\n                    </Button>\n                  )}\n                </Card.Content>\n              )}\n              {loading && (\n                <Card.Content extra>\n                  <Placeholder>\n                    <Placeholder.Header>\n                      <Placeholder.Line />\n                    </Placeholder.Header>\n                  </Placeholder>\n                </Card.Content>\n              )}\n            </Card>\n          </Segment>\n        </Portal>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nModal.displayName = 'Modal';\n\nexport { Modal };\n","import React, { useState } from 'react';\nimport {\n  Calendar as ReactBigCalendar,\n  momentLocalizer,\n} from 'react-big-calendar';\nimport withDragAndDrop from 'react-big-calendar/lib/addons/dragAndDrop';\nimport moment from 'moment';\nimport { PageContainer } from '../../components';\n\nconst localizer = momentLocalizer(moment);\n\nconst DragAndDropCalendar = withDragAndDrop(ReactBigCalendar);\n\nconst Calendar = () => {\n  const initialEvent = [\n    {\n      id: 0,\n      title: 'Test event... 111',\n      start: moment(new Date()).toDate(),\n      end: moment(new Date()).add(1, 'day').toDate(),\n    },\n    {\n      id: 1,\n      title: 'Test event... 222',\n      start: moment(new Date()).add(2, 'day').toDate(),\n      end: moment(new Date()).add(3, 'day').toDate(),\n    },\n    {\n      id: 2,\n      title: 'Test event... 333',\n      start: moment(new Date()).add(4, 'day').toDate(),\n      end: moment(new Date()).add(5, 'day').toDate(),\n    },\n  ];\n  const [events, setEvents] = useState(initialEvent);\n  const [displayDragItemInCell, setDisplayDragItemInCell] = useState(true);\n  const [draggedEvent, setDraggedEvent] = useState(null);\n\n  const resizeEvent = ({ event, start, end }) => {\n    console.log('resizeEvent', { event, start, end });\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end }\n        : existingEvent;\n    });\n\n    setEvents(nextEvents);\n  };\n\n  const handleDragStart = event => {\n    console.log('handleDragStart', event);\n    setDraggedEvent(event);\n  };\n\n  const dragFromOutsideItem = () => {\n    return draggedEvent;\n  };\n\n  const onDropFromOutside = ({ start, end, allDay }) => {\n    console.log('onDropFromOutside', { start, end, allDay });\n    const event = {\n      id: draggedEvent.id,\n      title: draggedEvent.title,\n      start,\n      end,\n      allDay: allDay,\n    };\n\n    setDraggedEvent(null);\n    moveEvent({ event, start, end });\n  };\n\n  const moveEvent = ({ event, start, end, isAllDay: droppedOnAllDaySlot }) => {\n    console.log('moveEvent', {\n      event,\n      start,\n      end,\n      isAllDay: droppedOnAllDaySlot,\n    });\n    let allDay = event.allDay;\n\n    if (!event.allDay && droppedOnAllDaySlot) {\n      allDay = true;\n    } else if (event.allDay && !droppedOnAllDaySlot) {\n      allDay = false;\n    }\n\n    const nextEvents = events.map(existingEvent => {\n      return existingEvent.id === event.id\n        ? { ...existingEvent, start, end, allDay }\n        : existingEvent;\n    });\n\n    console.log(\n      'next event after move',\n      nextEvents.find(ev => ev.id === event.id)\n    );\n\n    setEvents(nextEvents);\n  };\n\n  return (\n    <PageContainer>\n      <DragAndDropCalendar\n        selectable\n        localizer={localizer}\n        events={events}\n        onEventDrop={moveEvent}\n        onEventResize={resizeEvent}\n        startAccessor=\"start\"\n        endAccessor=\"end\"\n        // resizableAccessor={() => false}\n        style={{ height: 500 }}\n        popup\n        dragFromOutsideItem={displayDragItemInCell ? dragFromOutsideItem : null}\n        onDropFromOutside={onDropFromOutside}\n        handleDragStart={handleDragStart}\n      />\n    </PageContainer>\n  );\n};\n\nCalendar.displayName = 'Calendar';\n\nexport { Calendar };\n","import React from 'react';\nimport { Timeline, PageContainer } from '../../components';\n\nconst Dashboard = () => {\n  return (\n    <PageContainer>\n      <Timeline />\n    </PageContainer>\n  );\n};\n\nDashboard.displayName = 'Dashboard';\n\nexport { Dashboard };\n","import React from 'react';\n\nimport { PageContainer, Organizations } from '../../components';\n\nconst OrganizationJoined = () => {\n  return (\n    <PageContainer>\n      <Organizations type=\"joined\" />\n    </PageContainer>\n  );\n};\n\nOrganizationJoined.displayName = 'OrganizationJoined';\n\nexport { OrganizationJoined };\n","import React from 'react';\n\nimport { PageContainer, KanbanBoard } from '../../components';\n\nconst OrganizationKanban = () => {\n  return (\n    <PageContainer>\n      <KanbanBoard />\n    </PageContainer>\n  );\n};\n\nOrganizationKanban.displayName = 'OrganizationKanban';\n\nexport { OrganizationKanban };\n","import React from 'react';\n\nimport { PageContainer, Organizations } from '../../components';\n\nconst OrganizationOwn = () => {\n  return (\n    <PageContainer>\n      <Organizations type=\"own\" />\n    </PageContainer>\n  );\n};\n\nOrganizationOwn.displayName = 'OrganizationOwn';\n\nexport { OrganizationOwn };\n","/* eslint-disable multiline-ternary */\nimport React from 'react';\nimport { Message } from 'semantic-ui-react';\n// import { Link } from 'react-router-dom';\nimport {\n  UserQuickInfo,\n  Funds,\n  ProfileConfiguration,\n  PageContainer,\n} from '../../components';\nimport { useProfile, useLoader } from '../../hooks';\n\nconst Profile = () => {\n  const { profileData } = useProfile();\n  const { loadingProfile } = useLoader();\n\n  // TODO: should also add !accountLoading type of loader;\n  return !loadingProfile ? (\n    <PageContainer>\n      <UserQuickInfo />\n      <Funds />\n      {!profileData && (\n        <Message info>\n          <Message.Header>\n            It seems you haven't created a profile yet...\n          </Message.Header>\n          {/* <Link to=\"configure\">Click here to create your profile.</Link> */}\n          <Message.Content>\n            Create your profile in the panel below.\n          </Message.Content>\n        </Message>\n      )}\n      <ProfileConfiguration />\n    </PageContainer>\n  ) : (\n    <></>\n  );\n};\n\nProfile.displayName = 'Profile';\n\nexport { Profile };\n","import React from 'react';\n\nconst SignIn = () => {\n  return <div>Sign In Page</div>;\n};\n\nSignIn.displayName = 'SignIn';\n\nexport { SignIn };\n","import React from 'react';\n\nconst SignUp = () => {\n  return <div>Sign Up Page</div>;\n};\n\nSignUp.displayName = 'SignUp';\n\nexport { SignUp };\n","import React, { useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport './styles/styles.scss';\n\nimport {\n  TemplateResources,\n  SignUp,\n  SignIn,\n  Profile,\n  Dashboard,\n  Calendar,\n  OrganizationJoined,\n  OrganizationOwn,\n  OrganizationKanban,\n} from './pages';\n\nimport { Header, Layout, LoaderFullPage } from './components';\nimport { useProfile } from './hooks';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nexport default function App() {\n  const loggedIn = true;\n\n  const { getProfile } = useProfile();\n\n  useEffect(() => {\n    getProfile();\n  }, [getProfile]);\n\n  return (\n    <BrowserRouter>\n      {loggedIn && <Header />}\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            loggedIn ? <Layout /> : <Navigate replace to=\"/auth/sign-in\" />\n          }\n        >\n          <Route path=\"profile\" element={<Profile />} />\n          <Route\n            path=\"profile/configure\"\n            element={<div>TODO: some profile related info here...</div>}\n          />\n\n          <Route path=\"dashboard\" element={<Dashboard />} />\n          <Route path=\"organization\">\n            <Route path=\"joined\" element={<OrganizationJoined />}></Route>\n            <Route path=\"own\" element={<OrganizationOwn />}></Route>\n            <Route path=\"kanban\" element={<OrganizationKanban />}></Route>\n          </Route>\n          <Route path=\"calendar\" element={<Calendar />} />\n        </Route>\n        <Route\n          path=\"/auth/sign-in\"\n          element={!loggedIn ? <SignIn /> : <Navigate replace to=\"/\" />}\n        />\n        <Route\n          path=\"/auth/sign-up\"\n          element={!loggedIn ? <SignUp /> : <Navigate replace to=\"/\" />}\n        />\n        <Route path=\"template-resources\" element={<TemplateResources />} />\n        <Route path=\"*\" element={<Navigate replace to=\"/\" />}></Route>\n      </Routes>\n      <ToastContainer newestOnTop />\n      <LoaderFullPage />\n    </BrowserRouter>\n  );\n}\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  sidebarWidth: 180,\n};\n\nconst generalSlice = createSlice({\n  name: 'general',\n  initialState,\n  reducers: {},\n});\n\nexport const {} = generalSlice.actions;\n\nexport default generalSlice.reducer;\n","export default function* () {}\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware from 'redux-saga';\nimport accountReducer from './slices/accountSlice';\nimport profileReducer from './slices/profileSlice';\nimport statusReducer from './slices/statusSlice';\nimport tasksReducer from './slices/tasksSlice';\nimport daoReducer from './slices/daoSlice';\nimport loadersReducer from './slices/loadersSlice';\nimport generalReducer from './slices/generalSlice';\nimport rootSaga from './saga/index';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    general: generalReducer,\n    account: accountReducer,\n    profile: profileReducer,\n    status: statusReducer,\n    tasks: tasksReducer,\n    dao: daoReducer,\n    loaders: loadersReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({ thunk: false }).concat(sagaMiddleware),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport store from './store/store';\nimport { Provider } from 'react-redux';\n\nimport { SubstrateContextProvider } from './substrate-lib';\n\nReactDOM.render(\n  <Provider store={store}>\n    <SubstrateContextProvider>\n      <App />\n    </SubstrateContextProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}